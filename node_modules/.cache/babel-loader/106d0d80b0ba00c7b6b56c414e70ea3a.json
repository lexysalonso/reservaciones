{"ast":null,"code":"import { LOAD_PENDING } from \"types\";\nimport { LOAD, CREATE, UPDATE, DELETE, CLEAR } from \"types\";\nexport const initialstate = {\n  choferes: []\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_PENDING:\n      {}\n\n    case LOAD:\n      {\n        return { ...state,\n          choferes: action.payload.map(chofer => chofer)\n        };\n      }\n\n    case CREATE:\n      {\n        return { ...state,\n          choferes: [...state.choferes, action.payload]\n        };\n      }\n\n    case UPDATE:\n      {\n        let newArray = state.choferes.map(chofer => chofer.pk === action.payload.pk ? action.payload : chofer);\n        return { ...state,\n          choferes: newArray\n        };\n      }\n\n    case DELETE:\n      {\n        let newData = state.choferes.filter(chofer => chofer.pk !== action.payload.pk);\n        return { ...state,\n          choferes: newData\n        };\n      }\n\n    case CLEAR:\n      {\n        return initialstate;\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/reducers/choferesReducers.js"],"names":["LOAD_PENDING","LOAD","CREATE","UPDATE","DELETE","CLEAR","initialstate","choferes","state","action","type","payload","map","chofer","newArray","pk","newData","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,OAA7B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,KAAvC,QAAoD,OAApD;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAArB;AAIP,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AAAkB,OAAE;;AACpB,SAAKC,IAAL;AAAW;AACT,eAAO,EACL,GAAGO,KADE;AAELD,UAAAA,QAAQ,EAAEE,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoBC,MAAD,IAAYA,MAA/B;AAFL,SAAP;AAID;;AACD,SAAKX,MAAL;AAAa;AACX,eAAO,EACL,GAAGM,KADE;AAELD,UAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAV,EAAoBE,MAAM,CAACE,OAA3B;AAFL,SAAP;AAID;;AACD,SAAKR,MAAL;AAAa;AACX,YAAIW,QAAQ,GAAGN,KAAK,CAACD,QAAN,CAAeK,GAAf,CAAoBC,MAAD,IAChCA,MAAM,CAACE,EAAP,KAAcN,MAAM,CAACE,OAAP,CAAeI,EAA7B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDE,MADtC,CAAf;AAIA,eAAO,EACL,GAAGL,KADE;AAELD,UAAAA,QAAQ,EAAEO;AAFL,SAAP;AAID;;AAED,SAAKV,MAAL;AAAa;AACX,YAAIY,OAAO,GAAGR,KAAK,CAACD,QAAN,CAAeU,MAAf,CACXJ,MAAD,IAAYA,MAAM,CAACE,EAAP,KAAcN,MAAM,CAACE,OAAP,CAAeI,EAD7B,CAAd;AAGA,eAAO,EACL,GAAGP,KADE;AAELD,UAAAA,QAAQ,EAAES;AAFL,SAAP;AAID;;AACD,SAAKX,KAAL;AAAY;AACV,eAAOC,YAAP;AACD;;AAED;AACE,aAAOE,KAAP;AAvCJ;AAyCD,CA1CD","sourcesContent":["import { LOAD_PENDING } from \"types\";\nimport { LOAD, CREATE, UPDATE, DELETE, CLEAR } from \"types\";\n\nexport const initialstate = {\n  choferes: [],\n};\n\nexport default (state = initialstate, action) => {\n  switch (action.type) {\n    case LOAD_PENDING:{}\n    case LOAD: {\n      return {\n        ...state,\n        choferes: action.payload.map((chofer) => chofer),\n      };\n    }\n    case CREATE: {\n      return {\n        ...state,\n        choferes: [...state.choferes, action.payload],\n      };\n    }\n    case UPDATE: {\n      let newArray = state.choferes.map((chofer) =>\n        chofer.pk === action.payload.pk ? action.payload : chofer\n      );\n\n      return {\n        ...state,\n        choferes: newArray,\n      };\n    }\n\n    case DELETE: {\n      let newData = state.choferes.filter(\n        (chofer) => chofer.pk !== action.payload.pk\n      );\n      return {\n        ...state,\n        choferes: newData,\n      };\n    }\n    case CLEAR: {\n      return initialstate;\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}