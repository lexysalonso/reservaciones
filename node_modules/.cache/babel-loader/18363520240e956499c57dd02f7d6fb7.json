{"ast":null,"code":"import storage from \"../../helpers/storage\";\nimport service from \"../../helpers/servicesAxios\";\nimport { isAuth, isAuthError } from \"actions/userActions\";\nimport jwt_decode from 'jwt-decode';\n\nconst loginAuth = (data, setAccessToken) => {\n  return dispatch => {\n    service.post(\"/token/\", data).then(response => {\n      if (response.status === 401) dispatch(isAuthError(response));else {\n        storage.save(storage.Keys.auth, response.access);\n        storage.save(storage.Keys.refresh, response.refresh);\n        dispatch(isAuth(response.access));\n        setAccessToken(jwt_decode(re));\n        console.log(\"ver log\", response);\n        window.location.href = \"/\";\n      }\n    });\n  };\n};\n\nconst logout = () => {\n  service.post(\"/logout/\").then(response => {\n    storage.remove(storage.Keys.auth);\n    storage.remove(storage.Keys.refresh);\n    window.location.href = \"/login\";\n  });\n};\n\nexport default {\n  loginAuth,\n  logout\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/components/Login/services.js"],"names":["storage","service","isAuth","isAuthError","jwt_decode","loginAuth","data","setAccessToken","dispatch","post","then","response","status","save","Keys","auth","access","refresh","re","console","log","window","location","href","logout","remove"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,qBAApC;AACA,OAAOC,UAAP,MAAwB,YAAxB;;AAGC,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,cAAP,KAA0B;AAC1C,SAAQC,QAAD,IAAc;AACnBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,SAAb,EAAwBH,IAAxB,EAA8BI,IAA9B,CAAoCC,QAAD,IAAc;AAC/C,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6BJ,QAAQ,CAACL,WAAW,CAACQ,QAAD,CAAZ,CAAR,CAA7B,KACK;AACHX,QAAAA,OAAO,CAACa,IAAR,CAAab,OAAO,CAACc,IAAR,CAAaC,IAA1B,EAAgCJ,QAAQ,CAACK,MAAzC;AACAhB,QAAAA,OAAO,CAACa,IAAR,CAAab,OAAO,CAACc,IAAR,CAAaG,OAA1B,EAAmCN,QAAQ,CAACM,OAA5C;AACAT,QAAAA,QAAQ,CAACN,MAAM,CAACS,QAAQ,CAACK,MAAV,CAAP,CAAR;AACAT,QAAAA,cAAc,CAACH,UAAU,CAACc,EAAD,CAAX,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,QAAvB;AACAU,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF,KAVD;AAWD,GAZD;AAaD,CAdD;;AAiBA,MAAMC,MAAM,GAAG,MAAI;AACfvB,EAAAA,OAAO,CAACQ,IAAR,CAAa,UAAb,EAAyBC,IAAzB,CAA+BC,QAAD,IAAY;AACrCX,IAAAA,OAAO,CAACyB,MAAR,CAAezB,OAAO,CAACc,IAAR,CAAaC,IAA5B;AACAf,IAAAA,OAAO,CAACyB,MAAR,CAAezB,OAAO,CAACc,IAAR,CAAaG,OAA5B;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACJ,GAJD;AAKH,CAND;;AAQA,eAAe;AAAElB,EAAAA,SAAF;AAAamB,EAAAA;AAAb,CAAf","sourcesContent":["import storage from \"../../helpers/storage\"\nimport service from \"../../helpers/servicesAxios\"\nimport { isAuth, isAuthError } from \"actions/userActions\"\nimport jwt_decode  from 'jwt-decode';\n\n\n const loginAuth = (data, setAccessToken) => {\n   return (dispatch) => {\n     service.post(\"/token/\", data).then((response) => {\n       if (response.status === 401) dispatch(isAuthError(response));\n       else {\n         storage.save(storage.Keys.auth, response.access);\n         storage.save(storage.Keys.refresh, response.refresh);\n         dispatch(isAuth(response.access));\n         setAccessToken(jwt_decode(re))\n         console.log(\"ver log\", response);\n         window.location.href = \"/\";\n       }\n     });\n   };\n }; \n\n\n const logout = ()=>{\n     service.post(\"/logout/\").then((response)=>{\n          storage.remove(storage.Keys.auth)\n          storage.remove(storage.Keys.refresh)\n          window.location.href=\"/login\"\n     })\n }\n\n export default { loginAuth, logout };"]},"metadata":{},"sourceType":"module"}