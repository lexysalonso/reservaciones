{"ast":null,"code":"import axios from \"axios\";\nimport storage from \"helpers/storage\";\nimport dayjs from \"dayjs\";\nimport jwt_decode from \"jwt-decode\";\nconst instance = axios.create();\n\nconst useAxiosInstance = () => {\n  instance.interceptors.request.use(async response => {\n    const token = storage.load(storage.Keys.auth) ? storage.load(storage.Keys.auth) : null;\n\n    if (token) {\n      let user = jwt_decode(token);\n      const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n      console.log(\"ver expired\", isExpired);\n      return response;\n    }\n  }, err => {\n    console.log(err);\n    Promise.reject(err);\n  });\n  return instance;\n};\n\nexport default useAxiosInstance;","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/hooks/useAxiosInstance.js"],"names":["axios","storage","dayjs","jwt_decode","instance","create","useAxiosInstance","interceptors","request","use","response","token","load","Keys","auth","user","isExpired","unix","exp","diff","console","log","err","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,EAAjB;;AAEA,MAAMC,gBAAgB,GAAG,MAAI;AAEzBF,EAAAA,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACC,MAAOC,QAAP,IAAoB;AAChB,UAAMC,KAAK,GAAGV,OAAO,CAACW,IAAR,CAAaX,OAAO,CAACY,IAAR,CAAaC,IAA1B,IAAkCb,OAAO,CAACW,IAAR,CAAaX,OAAO,CAACY,IAAR,CAAaC,IAA1B,CAAlC,GAAmE,IAAjF;;AACA,QAAIH,KAAJ,EAAU;AACN,UAAII,IAAI,GAAGZ,UAAU,CAACQ,KAAD,CAArB;AACA,YAAMK,SAAS,GAAGd,KAAK,CAACe,IAAN,CAAWF,IAAI,CAACG,GAAhB,EAAqBC,IAArB,CAA0BjB,KAAK,EAA/B,IAAqC,CAAvD;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,SAA3B;AACA,aAAON,QAAP;AAEH;AACJ,GAVF,EAWGY,GAAD,IAAS;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAC,IAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf;AACD,GAdH;AAiBC,SAAOlB,QAAP;AAEJ,CArBD;;AAuBA,eAAeE,gBAAf","sourcesContent":["import axios from \"axios\";\nimport storage from \"helpers/storage\";\nimport dayjs from \"dayjs\";\nimport jwt_decode from \"jwt-decode\";\nconst instance = axios.create();\n\nconst useAxiosInstance = ()=>{\n\n    instance.interceptors.request.use(\n     async (response) => {\n         const token = storage.load(storage.Keys.auth) ? storage.load(storage.Keys.auth): null\n         if (token){\n             let user = jwt_decode(token)\n             const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n             console.log(\"ver expired\", isExpired)\n             return response\n\n         }\n     },       \n      (err) => {\n        console.log(err);\n        Promise.reject(err);\n      }\n    );\n    \n     return instance ;\n\n}\n\nexport default useAxiosInstance;"]},"metadata":{},"sourceType":"module"}