{"ast":null,"code":"import storage from \"../../helpers/storage\";\nimport service from \"../../helpers/servicesAxios\";\nimport { isAuth, isAuthError } from \"actions/userActions\";\n\nconst loginAuth = (data, setAcessToken) => {\n  return dispatch => {\n    service.post(\"/token/\", {\n      username,\n      password\n    }).then(response => {\n      if (response.status === 401) dispatch(isAuthError(response));else {\n        storage.save(storage.Keys.auth, response.access);\n        storage.save(storage.Keys.refresh, response.refresh);\n        storage.save(\"user\");\n        dispatch(isAuth(response.access));\n        console.log(\"ver log\", response);\n        window.location.href = '/';\n      }\n    });\n  };\n};\n\nconst logout = () => {\n  service.post(\"/logout/\").then(response => {\n    storage.remove(storage.Keys.auth);\n    storage.remove(storage.Keys.refresh);\n    window.location.href = \"/login\";\n  });\n};\n\nexport default {\n  loginAuth,\n  logout\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/components/Login/services.js"],"names":["storage","service","isAuth","isAuthError","loginAuth","data","setAcessToken","dispatch","post","username","password","then","response","status","save","Keys","auth","access","refresh","console","log","window","location","href","logout","remove"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,qBAApC;;AAGC,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAMC,aAAN,KAAwB;AACtC,SAAOC,QAAQ,IAAG;AACdN,IAAAA,OAAO,CAACO,IAAR,CAAa,SAAb,EAAuB;AAACC,MAAAA,QAAD;AAAUC,MAAAA;AAAV,KAAvB,EAA4CC,IAA5C,CAAkDC,QAAD,IAAY;AACzD,UAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4BN,QAAQ,CAACJ,WAAW,CAACS,QAAD,CAAZ,CAAR,CAA5B,KACI;AACFZ,QAAAA,OAAO,CAACc,IAAR,CAAad,OAAO,CAACe,IAAR,CAAaC,IAA1B,EAAgCJ,QAAQ,CAACK,MAAzC;AACAjB,QAAAA,OAAO,CAACc,IAAR,CAAad,OAAO,CAACe,IAAR,CAAaG,OAA1B,EAAmCN,QAAQ,CAACM,OAA5C;AACAlB,QAAAA,OAAO,CAACc,IAAR,CAAa,MAAb;AACAP,QAAAA,QAAQ,CAACL,MAAM,CAACU,QAAQ,CAACK,MAAV,CAAP,CAAR;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,QAAvB;AACAS,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAsB,GAAtB;AACD;AAGJ,KAZD;AAaH,GAdD;AAeH,CAhBD;;AAmBA,MAAMC,MAAM,GAAG,MAAI;AACfvB,EAAAA,OAAO,CAACO,IAAR,CAAa,UAAb,EAAyBG,IAAzB,CAA+BC,QAAD,IAAY;AACrCZ,IAAAA,OAAO,CAACyB,MAAR,CAAezB,OAAO,CAACe,IAAR,CAAaC,IAA5B;AACAhB,IAAAA,OAAO,CAACyB,MAAR,CAAezB,OAAO,CAACe,IAAR,CAAaG,OAA5B;AACAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACJ,GAJD;AAKH,CAND;;AAQA,eAAe;AAAEnB,EAAAA,SAAF;AAAaoB,EAAAA;AAAb,CAAf","sourcesContent":["import storage from \"../../helpers/storage\"\nimport service from \"../../helpers/servicesAxios\"\nimport { isAuth, isAuthError } from \"actions/userActions\"\n\n\n const loginAuth = (data,setAcessToken) => {\n     return dispatch =>{\n         service.post(\"/token/\",{username,password}).then((response)=>{\n             if(response.status === 401) dispatch(isAuthError(response))\n             else{\n               storage.save(storage.Keys.auth, response.access);\n               storage.save(storage.Keys.refresh, response.refresh);\n               storage.save(\"user\")\n               dispatch(isAuth(response.access))\n               console.log(\"ver log\", response);\n               window.location.href= '/'\n             }\n            \n           \n         })\n     }\n } \n\n\n const logout = ()=>{\n     service.post(\"/logout/\").then((response)=>{\n          storage.remove(storage.Keys.auth)\n          storage.remove(storage.Keys.refresh)\n          window.location.href=\"/login\"\n     })\n }\n\n export default { loginAuth, logout };"]},"metadata":{},"sourceType":"module"}