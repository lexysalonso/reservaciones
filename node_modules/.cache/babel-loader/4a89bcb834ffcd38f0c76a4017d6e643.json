{"ast":null,"code":"import { loadOmnibus, createOmnibus, updateOmnibus, deleteOmnibus, clearOmnibus, loadOmnibusLoading } from \"../../actions/omnibusActions\";\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"../../utilitis/Swal\";\nimport { ShowSawl } from 'utilitis/Swal';\n\nconst getOmnibus = () => {\n  return async dispatch => {\n    dispatch(loadOmnibusLoading());\n  };\n};\n\nconst postOmnibus = value => {\n  return async dispatch => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/omnibus/\", value);\n\n    if (!result.error) {\n      await dispatch(createOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se adiciono Satisfactoriamente\"\n      });\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \" Not Signed in successfully\"\n      });\n    }\n\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se  edito correctamente\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst tallerOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/taller/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha pasado al taller\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put taller\", result);\n  };\n};\n\nconst disponibleOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/disponible/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Omnibus ya se encuentra disponible\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put disponible\", result);\n  };\n};\n\nconst delOmnibus = data => {\n  console.log(\"ver data del\", data);\n  return async dispatch => {\n    let result = await service.del(`/omnibus/${data.pk}/`);\n\n    if (!result.error) {\n      await dispatch(deleteOmnibus(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha eliminado con exito\"\n      });\n    }\n\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default {\n  getOmnibus,\n  tallerOmnibus,\n  delOmnibus,\n  disponibleOmnibus,\n  postOmnibus,\n  putOmnibus,\n  delOmnibus\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Omnibus/services.js"],"names":["loadOmnibus","createOmnibus","updateOmnibus","deleteOmnibus","clearOmnibus","loadOmnibusLoading","service","Toast","ShowSawl","getOmnibus","dispatch","postOmnibus","value","console","log","result","post","error","fire","icon","title","putOmnibus","data","put","pk","tallerOmnibus","disponibleOmnibus","delOmnibus","del"],"mappings":"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","sourcesContent":["import {\n  loadOmnibus,\n  createOmnibus,\n  updateOmnibus,\n  deleteOmnibus,\n  clearOmnibus,\n  loadOmnibusLoading\n} from \"../../actions/omnibusActions\";\n\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"../../utilitis/Swal\";\nimport { ShowSawl } from 'utilitis/Swal';\n\nconst getOmnibus = () => {\n  return async (dispatch) => {\n    dispatch(loadOmnibusLoading())\n    \n  };\n};\n\nconst postOmnibus = (value) => {\n  return async (dispatch) => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/omnibus/\", value);\n    if (!result.error) {\n      await dispatch(createOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se adiciono Satisfactoriamente\",\n      });\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \" Not Signed in successfully\",\n      });\n    }\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/`, data);\n    if (!result.error) {\n      await dispatch(updateOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se  edito correctamente\",\n      });\n    }\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst tallerOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/taller/`, data);\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha pasado al taller\",\n      });\n    }\n    await console.log(\"ver el resutl del put taller\", result);\n  };\n};\n\nconst disponibleOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/disponible/`, data);\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Omnibus ya se encuentra disponible\",\n      });\n    }\n    await console.log(\"ver el resutl del put disponible\", result);\n  };\n};\n\nconst delOmnibus = (data) => {\n  console.log(\"ver data del\", data);\n  return async (dispatch) => {\n    let result = await service.del(`/omnibus/${data.pk}/`);\n    if (!result.error) {\n      await dispatch(deleteOmnibus(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha eliminado con exito\",\n      });\n    }\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default {\n  getOmnibus,\n  tallerOmnibus,\n  delOmnibus,\n  disponibleOmnibus,\n  postOmnibus,\n  putOmnibus,\n  delOmnibus,\n};\n"]},"metadata":{},"sourceType":"module"}