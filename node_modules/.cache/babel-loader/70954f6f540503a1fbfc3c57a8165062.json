{"ast":null,"code":"import { loadPending, loadChofers, createChofers, updateChoferes, deleteChoferes, clearchoferes } from \"../../actions/choferesActions\";\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"utilitis/Swal\";\nimport { ShowSawl } from \"utilitis/Swal\";\n\nconst getChoferes = () => {\n  return async dispatch => {\n    dispatch(loadPending());\n  };\n};\n\nconst postChoferes = value => {\n  return async dispatch => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/choferes/\", value);\n\n    if (!result.error) {\n      await dispatch(createChofers(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Chofer se ha adicionado con exito\"\n      });\n    }\n\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putChoferes = data => {\n  return async dispatch => {\n    let result = await service.put(`/choferes/${data.pk}/`, data);\n\n    if (!result.error) {\n      await dispatch(updateChoferes(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El chofer se ha editado con exito\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst delChoferes = data => {\n  console.log(\"ver data del\", data);\n  return async dispatch => {\n    let result = await service.del(`/choferes/${data.pk}/`);\n\n    if (!result.error) {\n      await dispatch(deleteChoferes(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El chofer se ha eliminado con exito\"\n      });\n    }\n\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default {\n  getChoferes,\n  postChoferes,\n  putChoferes,\n  delChoferes\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Choferes/services.js"],"names":["loadPending","loadChofers","createChofers","updateChoferes","deleteChoferes","clearchoferes","service","Toast","ShowSawl","getChoferes","dispatch","postChoferes","value","console","log","result","post","error","fire","icon","title","putChoferes","data","put","pk","delChoferes","del"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,aANF,QAOO,+BAPP;AASA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACV,WAAW,EAAZ,CAAR;AAED,GAHD;AAID,CALD;;AAOA,MAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAO,MAAOF,QAAP,IAAoB;AACzBG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACA,UAAMG,MAAM,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,YAAb,EAA2BJ,KAA3B,CAArB;;AACA,QAAI,CAACG,MAAM,CAACE,KAAZ,EAAmB;AACjB,YAAMP,QAAQ,CAACR,aAAa,CAACa,MAAD,CAAd,CAAd;AACAR,MAAAA,KAAK,CAACW,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,KAAK,EAAE;AAFE,OAAX;AAID;;AACD,UAAMP,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CC,MAA7C,CAAN;AACD,GAXD;AAYD,CAbD;;AAeA,MAAMM,WAAW,GAAIC,IAAD,IAAU;AAC5B,SAAO,MAAOZ,QAAP,IAAoB;AACzB,QAAIK,MAAM,GAAG,MAAMT,OAAO,CAACiB,GAAR,CAAa,aAAYD,IAAI,CAACE,EAAG,GAAjC,EAAqCF,IAArC,CAAnB;;AACA,QAAI,CAACP,MAAM,CAACE,KAAZ,EAAmB;AACjB,YAAMP,QAAQ,CAACP,cAAc,CAACY,MAAD,CAAf,CAAd;AACAR,MAAAA,KAAK,CAACW,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,KAAK,EAAE;AAFE,OAAX;AAID;;AACD,UAAMP,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCC,MAArC,CAAN;AACD,GAVD;AAWD,CAZD;;AAcA,MAAMU,WAAW,GAAIH,IAAD,IAAU;AAC5BT,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B;AACA,SAAO,MAAOZ,QAAP,IAAoB;AACzB,QAAIK,MAAM,GAAG,MAAMT,OAAO,CAACoB,GAAR,CAAa,aAAYJ,IAAI,CAACE,EAAG,GAAjC,CAAnB;;AACA,QAAI,CAACT,MAAM,CAACE,KAAZ,EAAmB;AACjB,YAAMP,QAAQ,CAACN,cAAc,CAACkB,IAAD,CAAf,CAAd;AACAf,MAAAA,KAAK,CAACW,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,KAAK,EAAE;AAFE,OAAX;AAID;;AACD,UAAMP,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,MAA7B,CAAN;AACD,GAVD;AAWD,CAbD;;AAeA,eAAe;AAAEN,EAAAA,WAAF;AAAeE,EAAAA,YAAf;AAA6BU,EAAAA,WAA7B;AAA0CI,EAAAA;AAA1C,CAAf","sourcesContent":["import {\n  loadPending,\n  loadChofers,\n  createChofers,\n  updateChoferes,\n  deleteChoferes,\n  clearchoferes,\n} from \"../../actions/choferesActions\";\n\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"utilitis/Swal\";\nimport { ShowSawl } from \"utilitis/Swal\";\n\nconst getChoferes = () => {\n  return async (dispatch) => {\n    dispatch(loadPending());\n   \n  };\n};\n\nconst postChoferes = (value) => {\n  return async (dispatch) => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/choferes/\", value);\n    if (!result.error) {\n      await dispatch(createChofers(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Chofer se ha adicionado con exito\",\n      });\n    }\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putChoferes = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/choferes/${data.pk}/`, data);\n    if (!result.error) {\n      await dispatch(updateChoferes(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El chofer se ha editado con exito\",\n      });\n    }\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst delChoferes = (data) => {\n  console.log(\"ver data del\", data);\n  return async (dispatch) => {\n    let result = await service.del(`/choferes/${data.pk}/`);\n    if (!result.error) {\n      await dispatch(deleteChoferes(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El chofer se ha eliminado con exito\",\n      });\n    }\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default { getChoferes, postChoferes, putChoferes, delChoferes };\n"]},"metadata":{},"sourceType":"module"}