{"ast":null,"code":"import { CREATE_OMNIBUS, LOAD_OMNIBUS, UPDATE_OMNIBUS, CLEAR_OMNIBUS, DELETE_OMNIBUS, OMNIBUS_DISPONIBLES, OMNIBUS_TALLER, OMNIBUS_MAS_VIAJES } from \"../types/index\";\nexport const initialstate = {\n  omnibus: [],\n  omnibustaller: [],\n  omnibusdisponibles: []\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_OMNIBUS:\n      {\n        console.log(\"ver payload\", action.payload);\n        return { ...state,\n          omnibus: action.payload.map(omnibus => omnibus)\n        };\n      }\n\n    case CREATE_OMNIBUS:\n      {\n        return { ...state,\n          omnibus: [...state.omnibus, action.payload]\n        };\n      }\n\n    case UPDATE_OMNIBUS:\n      {\n        let newArray = state.omnibus.map(omnibus => omnibus.pk === action.payload.pk ? action.payload : omnibus);\n        return { ...state,\n          omnibus: newArray\n        };\n      }\n\n    case DELETE_OMNIBUS:\n      {\n        let newData = state.omnibus.filter(omnibus => omnibus.pk !== action.payload.pk);\n        return { ...state,\n          omnibus: newData\n        };\n      }\n\n    case CLEAR_OMNIBUS:\n      {\n        return initialstate;\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/reducers/omnibusReducers.js"],"names":["CREATE_OMNIBUS","LOAD_OMNIBUS","UPDATE_OMNIBUS","CLEAR_OMNIBUS","DELETE_OMNIBUS","OMNIBUS_DISPONIBLES","OMNIBUS_TALLER","OMNIBUS_MAS_VIAJES","initialstate","omnibus","omnibustaller","omnibusdisponibles","state","action","type","console","log","payload","map","newArray","pk","newData","filter"],"mappings":"AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,mBANF,EAOEC,cAPF,EAQEC,kBARF,QASO,gBATP;AAWA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,EADiB;AAE1BC,EAAAA,aAAa,EAAC,EAFY;AAG1BC,EAAAA,kBAAkB,EAAC;AAHO,CAArB;AAMP,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,YAAL;AAAmB;AACjBc,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAAM,CAACI,OAAlC;AACA,eAAO,EACL,GAAGL,KADE;AAELH,UAAAA,OAAO,EAAEI,MAAM,CAACI,OAAP,CAAeC,GAAf,CAAoBT,OAAD,IAAaA,OAAhC;AAFJ,SAAP;AAID;;AACD,SAAKT,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGY,KADE;AAELH,UAAAA,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAV,EAAmBI,MAAM,CAACI,OAA1B;AAFJ,SAAP;AAID;;AACD,SAAKf,cAAL;AAAqB;AACnB,YAAIiB,QAAQ,GAAGP,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAmBT,OAAD,IAC/BA,OAAO,CAACW,EAAR,KAAeP,MAAM,CAACI,OAAP,CAAeG,EAA9B,GAAmCP,MAAM,CAACI,OAA1C,GAAoDR,OADvC,CAAf;AAIA,eAAO,EACL,GAAGG,KADE;AAELH,UAAAA,OAAO,EAAEU;AAFJ,SAAP;AAID;;AAED,SAAKf,cAAL;AAAqB;AACnB,YAAIiB,OAAO,GAAGT,KAAK,CAACH,OAAN,CAAca,MAAd,CACXb,OAAD,IAAaA,OAAO,CAACW,EAAR,KAAeP,MAAM,CAACI,OAAP,CAAeG,EAD/B,CAAd;AAGA,eAAO,EACL,GAAGR,KADE;AAELH,UAAAA,OAAO,EAAEY;AAFJ,SAAP;AAID;;AACD,SAAKlB,aAAL;AAAoB;AAClB,eAAOK,YAAP;AACD;;AAED;AACE,aAAOI,KAAP;AAvCJ;AAyCD,CA1CD","sourcesContent":["import {\n  CREATE_OMNIBUS,\n  LOAD_OMNIBUS,\n  UPDATE_OMNIBUS,\n  CLEAR_OMNIBUS,\n  DELETE_OMNIBUS,\n  OMNIBUS_DISPONIBLES,\n  OMNIBUS_TALLER,\n  OMNIBUS_MAS_VIAJES\n} from \"../types/index\";\n\nexport const initialstate = {\n  omnibus: [],\n  omnibustaller:[],\n  omnibusdisponibles:[]\n};\n\nexport default (state = initialstate, action) => {\n  switch (action.type) {\n    case LOAD_OMNIBUS: {\n      console.log(\"ver payload\", action.payload);\n      return {\n        ...state,\n        omnibus: action.payload.map((omnibus) => omnibus),\n      };\n    }\n    case CREATE_OMNIBUS: {\n      return {\n        ...state,\n        omnibus: [...state.omnibus, action.payload],\n      };\n    }\n    case UPDATE_OMNIBUS: {\n      let newArray = state.omnibus.map((omnibus) =>\n        omnibus.pk === action.payload.pk ? action.payload : omnibus\n      );\n\n      return {\n        ...state,\n        omnibus: newArray,\n      };\n    }\n\n    case DELETE_OMNIBUS: {\n      let newData = state.omnibus.filter(\n        (omnibus) => omnibus.pk !== action.payload.pk\n      );\n      return {\n        ...state,\n        omnibus: newData,\n      };\n    }\n    case CLEAR_OMNIBUS: {\n      return initialstate;\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}