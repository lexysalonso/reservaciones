{"ast":null,"code":"import { LOAD, CREATE, UPDATE, DELETE, CLEAR } from \"types\";\nconst initialstate = {\n  choferes: []\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD:\n      {\n        return { ...state,\n          choferes: [...ch]\n        };\n      }\n\n    case CREATE:\n      {\n        return { ...state,\n          choferes: [...state.choferes, action.payload]\n        };\n      }\n\n    case UPDATE:\n      {\n        let newArray = state.choferes.map(chofer => chofer.id === action.payload.id ? action.payload : chofer);\n        return { ...state,\n          choferes: newArray\n        };\n      }\n\n    case DELETE:\n      {\n        return { ...state,\n          choferes: state.choferes.map(chofer => chofer.id !== action.payload)\n        };\n      }\n\n    case CLEAR:\n      {\n        return initialstate;\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/reducers/choferesReducers.js"],"names":["LOAD","CREATE","UPDATE","DELETE","CLEAR","initialstate","choferes","state","action","type","ch","payload","newArray","map","chofer","id"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,KAAvC,QAAoD,OAApD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,IAAL;AAAW;AACT,eAAO,EACL,GAAGO,KADE;AAELD,UAAAA,QAAQ,EAAE,CAAC,GAAGI,EAAJ;AAFL,SAAP;AAID;;AACD,SAAKT,MAAL;AAAa;AACX,eAAO,EACL,GAAGM,KADE;AAELD,UAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAV,EAAoBE,MAAM,CAACG,OAA3B;AAFL,SAAP;AAID;;AACD,SAAKT,MAAL;AAAa;AACX,YAAIU,QAAQ,GAAGL,KAAK,CAACD,QAAN,CAAeO,GAAf,CAAoBC,MAAD,IAChCA,MAAM,CAACC,EAAP,KAAcP,MAAM,CAACG,OAAP,CAAeI,EAA7B,GAAkCP,MAAM,CAACG,OAAzC,GAAmDG,MADtC,CAAf;AAIA,eAAO,EACL,GAAGP,KADE;AAELD,UAAAA,QAAQ,EAAEM;AAFL,SAAP;AAID;;AAED,SAAKT,MAAL;AAAa;AACX,eAAO,EACL,GAAGI,KADE;AAELD,UAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeO,GAAf,CAAoBC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcP,MAAM,CAACG,OAApD;AAFL,SAAP;AAID;;AACD,SAAKP,KAAL;AAAY;AACV,eAAOC,YAAP;AACD;;AAED;AACE,aAAOE,KAAP;AAnCJ;AAqCD,CAtCD","sourcesContent":["import { LOAD, CREATE, UPDATE, DELETE, CLEAR } from \"types\";\n\nconst initialstate = {\n  choferes: [],\n};\n\nexport default (state = initialstate, action) => {\n  switch (action.type) {\n    case LOAD: {\n      return {\n        ...state,\n        choferes: [...ch],\n      };\n    }\n    case CREATE: {\n      return {\n        ...state,\n        choferes: [...state.choferes, action.payload],\n      };\n    }\n    case UPDATE: {\n      let newArray = state.choferes.map((chofer) =>\n        chofer.id === action.payload.id ? action.payload : chofer\n      );\n\n      return {\n        ...state,\n        choferes: newArray,\n      };\n    }\n\n    case DELETE: {\n      return {\n        ...state,\n        choferes: state.choferes.map((chofer) => chofer.id !== action.payload),\n      };\n    }\n    case CLEAR: {\n      return initialstate;\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}