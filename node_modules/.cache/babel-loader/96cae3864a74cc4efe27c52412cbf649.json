{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport OmnibusContext from \"context/OmnibusContext\";\nconst objnew = {\n  pk: null,\n  numero: \"\",\n  chapa: \"\",\n  disponible: false,\n  capacidad: \"\",\n  create_by: Number(1)\n};\n\nconst useOmnibus = (initialForm, validationsForm) => {\n  _s();\n\n  const {\n    dataToEdit,\n    setdataToEdit,\n    setModalClose,\n    create,\n    update\n  } = useContext(OmnibusContext);\n  const [form, setForm] = useState(objnew);\n  useEffect(() => {\n    console.log(\"ver datatoEdit\", dataToEdit);\n\n    if (dataToEdit) {\n      setForm(dataToEdit);\n    } else {\n      setForm(objnew);\n    }\n  }, [dataToEdit]);\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChangeCkeck = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.checked\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!form.numero || !form.chapa) {\n      alert(\"Los campos esta vacios\");\n      return;\n    }\n\n    if (form.pk === null) {\n      delete form.pk;\n      create(form);\n    } else {\n      update(form);\n    }\n\n    handleReset();\n  };\n\n  const handleReset = e => {\n    setForm(objnew);\n    setdataToEdit(null);\n    setModalClose();\n  };\n\n  return {\n    form,\n    handleChange,\n    handleChangeCkeck,\n    handleSubmit,\n    handleReset,\n    setModalClose\n  };\n};\n\n_s(useOmnibus, \"r4LJV8xRD/kljPZMU868+huOehQ=\");\n\nexport default useOmnibus;","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/hooks/useOmnibus.js"],"names":["React","useContext","useEffect","useState","OmnibusContext","objnew","pk","numero","chapa","disponible","capacidad","create_by","Number","useOmnibus","initialForm","validationsForm","dataToEdit","setdataToEdit","setModalClose","create","update","form","setForm","console","log","handleChange","e","target","name","value","handleChangeCkeck","checked","handleSubmit","preventDefault","alert","handleReset"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,IADS;AAEbC,EAAAA,MAAM,EAAE,EAFK;AAGbC,EAAAA,KAAK,EAAE,EAHM;AAIbC,EAAAA,UAAU,EAAE,KAJC;AAKbC,EAAAA,SAAS,EAAE,EALE;AAMbC,EAAAA,SAAS,EAAEC,MAAM,CAAC,CAAD;AANJ,CAAf;;AASA,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,eAAd,KAAkC;AAAA;;AACnD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA,MAA5C;AAAoDC,IAAAA;AAApD,MACJnB,UAAU,CAACG,cAAD,CADZ;AAEA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACE,MAAD,CAAhC;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,UAA9B;;AACA,QAAIA,UAAJ,EAAgB;AACdM,MAAAA,OAAO,CAACN,UAAD,CAAP;AACD,KAFD,MAEO;AACLM,MAAAA,OAAO,CAACjB,MAAD,CAAP;AACD;AACF,GAPQ,EAON,CAACW,UAAD,CAPM,CAAT;;AASA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,iBAAiB,GAAIJ,CAAD,IAAO;AAC/BJ,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASI;AAFpB,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIN,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAI,CAACZ,IAAI,CAACd,MAAN,IAAgB,CAACc,IAAI,CAACb,KAA1B,EAAiC;AAC/B0B,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACD;;AACD,QAAIb,IAAI,CAACf,EAAL,KAAY,IAAhB,EAAsB;AACpB,aAAOe,IAAI,CAACf,EAAZ;AACAa,MAAAA,MAAM,CAACE,IAAD,CAAN;AACD,KAHD,MAGO;AACLD,MAAAA,MAAM,CAACC,IAAD,CAAN;AACD;;AACDc,IAAAA,WAAW;AACZ,GAbD;;AAeA,QAAMA,WAAW,GAAIT,CAAD,IAAO;AACzBJ,IAAAA,OAAO,CAACjB,MAAD,CAAP;AACAY,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,IAAAA,aAAa;AACd,GAJD;;AAMA,SAAO;AACLG,IAAAA,IADK;AAELI,IAAAA,YAFK;AAGLK,IAAAA,iBAHK;AAILE,IAAAA,YAJK;AAKLG,IAAAA,WALK;AAMLjB,IAAAA;AANK,GAAP;AAQD,CA1DD;;GAAML,U;;AA4DN,eAAeA,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport OmnibusContext from \"context/OmnibusContext\";\n\nconst objnew = {\n  pk: null,\n  numero: \"\",\n  chapa: \"\",\n  disponible: false,\n  capacidad: \"\",\n  create_by: Number(1),\n};\n\nconst useOmnibus = (initialForm, validationsForm) => {\n  const { dataToEdit, setdataToEdit, setModalClose, create, update } =\n    useContext(OmnibusContext);\n  const [form, setForm] = useState(objnew);\n  \n\n  useEffect(() => {\n    console.log(\"ver datatoEdit\", dataToEdit);\n    if (dataToEdit) {\n      setForm(dataToEdit);\n    } else {\n      setForm(objnew);\n    }\n  }, [dataToEdit]);\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleChangeCkeck = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.checked,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!form.numero || !form.chapa) {\n      alert(\"Los campos esta vacios\");\n      return;\n    }\n    if (form.pk === null) {\n      delete form.pk;\n      create(form);\n    } else {\n      update(form);\n    }\n    handleReset();\n  };\n\n  const handleReset = (e) => {\n    setForm(objnew);\n    setdataToEdit(null);\n    setModalClose();\n  };\n\n  return {\n    form,\n    handleChange,\n    handleChangeCkeck,\n    handleSubmit,\n    handleReset,\n    setModalClose,\n  };\n};\n\nexport default useOmnibus;\n"]},"metadata":{},"sourceType":"module"}