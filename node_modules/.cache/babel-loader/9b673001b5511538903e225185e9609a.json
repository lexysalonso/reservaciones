{"ast":null,"code":"import { LOAD_VIAJES, CREATE_VIAJES, UPDATE_VIAJES, DELETE_VIAJES, CLEAR_VIAJES } from \"../types/index\";\nexport const initialstate = {\n  viajes: []\n};\nexport default ((vijaa, action) => {\n  switch (action.type) {\n    case LOAD_VIAJES:\n      {\n        return { ...state,\n          viajes: action.payload.map(viaje => viaje)\n        };\n      }\n\n    case CREATE_VIAJES:\n      {\n        return { ...state,\n          viajes: [...state.viajes, action.payload]\n        };\n      }\n\n    case UPDATE_VIAJES:\n      {\n        let newData = state.viajes.map(viaje => viaje.pk === action.payload.pk ? action.payload : viaje);\n        return { ...state,\n          viajes: newData\n        };\n      }\n\n    case DELETE_VIAJES:\n      {\n        let newDataDel = state.viajes.filter(viaje => viaje.pk !== action.payload.pk);\n        return { ...state,\n          viajes: newDataDel\n        };\n      }\n\n    case CLEAR_VIAJES:\n      {\n        return initialstate;\n      }\n\n    default:\n      state;\n  }\n});","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/reducers/viajesReducers.js"],"names":["LOAD_VIAJES","CREATE_VIAJES","UPDATE_VIAJES","DELETE_VIAJES","CLEAR_VIAJES","initialstate","viajes","vijaa","action","type","state","payload","map","viaje","newData","pk","newDataDel","filter"],"mappings":"AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,QAMO,gBANP;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB;AAIP,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGU,KADE;AAELJ,UAAAA,MAAM,EAAEE,MAAM,CAACG,OAAP,CAAeC,GAAf,CAAoBC,KAAD,IAAWA,KAA9B;AAFH,SAAP;AAID;;AACD,SAAKZ,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGS,KADE;AAELJ,UAAAA,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAkBE,MAAM,CAACG,OAAzB;AAFH,SAAP;AAID;;AAED,SAAKT,aAAL;AAAoB;AAClB,YAAIY,OAAO,GAAGJ,KAAK,CAACJ,MAAN,CAAaM,GAAb,CAAkBC,KAAD,IAC7BA,KAAK,CAACE,EAAN,KAAaP,MAAM,CAACG,OAAP,CAAeI,EAA5B,GAAiCP,MAAM,CAACG,OAAxC,GAAkDE,KADtC,CAAd;AAGA,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,MAAM,EAAEQ;AAFH,SAAP;AAID;;AACD,SAAKX,aAAL;AAAoB;AAClB,YAAIa,UAAU,GAAGN,KAAK,CAACJ,MAAN,CAAaW,MAAb,CACdJ,KAAD,IAAWA,KAAK,CAACE,EAAN,KAAaP,MAAM,CAACG,OAAP,CAAeI,EADxB,CAAjB;AAGA,eAAO,EACL,GAAGL,KADE;AAELJ,UAAAA,MAAM,EAAEU;AAFH,SAAP;AAID;;AACD,SAAKZ,YAAL;AAAmB;AACjB,eAAOC,YAAP;AACD;;AACD;AACEK,MAAAA,KAAK;AApCT;AAsCD,CAvCD","sourcesContent":["import {\n  LOAD_VIAJES,\n  CREATE_VIAJES,\n  UPDATE_VIAJES,\n  DELETE_VIAJES,\n  CLEAR_VIAJES,\n} from \"../types/index\";\n\nexport const initialstate = {\n  viajes: [],\n};\n\nexport default (vijaa, action) => {\n  switch (action.type) {\n    case LOAD_VIAJES: {\n      return {\n        ...state,\n        viajes: action.payload.map((viaje) => viaje),\n      };\n    }\n    case CREATE_VIAJES: {\n      return {\n        ...state,\n        viajes: [...state.viajes, action.payload],\n      };\n    }\n\n    case UPDATE_VIAJES: {\n      let newData = state.viajes.map((viaje) =>\n        viaje.pk === action.payload.pk ? action.payload : viaje\n      );\n      return {\n        ...state,\n        viajes: newData,\n      };\n    }\n    case DELETE_VIAJES: {\n      let newDataDel = state.viajes.filter(\n        (viaje) => viaje.pk !== action.payload.pk\n      );\n      return {\n        ...state,\n        viajes: newDataDel,\n      };\n    }\n    case CLEAR_VIAJES: {\n      return initialstate;\n    }\n    default:\n      state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}