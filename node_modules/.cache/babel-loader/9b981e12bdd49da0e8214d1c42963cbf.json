{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { loadOmnibus, createOmnibus, updateOmnibus, deleteOmnibus, clearOmnibus, loadOmnibusLoading } from \"../../actions/omnibusActions\";\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"../../utilitis/Swal\";\nimport { ShowSawl } from 'utilitis/Swal';\nimport { useCallback } from 'react';\n\nconst getOmnibus = () => {\n  _s();\n\n  return useCallback(async dispatch => {\n    dispatch(loadOmnibusLoading());\n    setTimeout(async () => {\n      let result = await service.get(\"/omnibus/\"); // await console.log(\"ver respuesta del get result\", result);\n\n      if (!result.error) {\n        await dispatch(loadOmnibus(result));\n        Toast.fire({\n          icon: \"success\",\n          title: \"Los Omnbius se han cargado con exito.\"\n        });\n      } else {\n        let msg = \"Hubo un error al cargar los Omnibus.\";\n        ShowSawl(result.status, msg);\n      }\n    }, 5000);\n  }, [dispatch]);\n};\n\n_s(getOmnibus, \"epj4qY15NHsef74wNqHIp5fdZmg=\");\n\nconst postOmnibus = value => {\n  return async dispatch => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/omnibus/\", value);\n\n    if (!result.error) {\n      await dispatch(createOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se adiciono Satisfactoriamente\"\n      });\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \" Not Signed in successfully\"\n      });\n    }\n\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se  edito correctamente\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst tallerOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/taller/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha pasado al taller\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put taller\", result);\n  };\n};\n\nconst disponibleOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/disponible/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Omnibus ya se encuentra disponible\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put disponible\", result);\n  };\n};\n\nconst delOmnibus = data => {\n  console.log(\"ver data del\", data);\n  return async dispatch => {\n    let result = await service.del(`/omnibus/${data.pk}/`);\n\n    if (!result.error) {\n      await dispatch(deleteOmnibus(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha eliminado con exito\"\n      });\n    }\n\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default {\n  getOmnibus,\n  tallerOmnibus,\n  delOmnibus,\n  disponibleOmnibus,\n  postOmnibus,\n  putOmnibus,\n  delOmnibus\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Omnibus/services.js"],"names":["loadOmnibus","createOmnibus","updateOmnibus","deleteOmnibus","clearOmnibus","loadOmnibusLoading","service","Toast","ShowSawl","useCallback","getOmnibus","dispatch","setTimeout","result","get","error","fire","icon","title","msg","status","postOmnibus","value","console","log","post","putOmnibus","data","put","pk","tallerOmnibus","disponibleOmnibus","delOmnibus","del"],"mappings":"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","sourcesContent":["import {\n  loadOmnibus,\n  createOmnibus,\n  updateOmnibus,\n  deleteOmnibus,\n  clearOmnibus,\n  loadOmnibusLoading\n} from \"../../actions/omnibusActions\";\n\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"../../utilitis/Swal\";\nimport { ShowSawl } from 'utilitis/Swal';\nimport { useCallback } from 'react';\n\nconst getOmnibus = () => {\n  return useCallback(async (dispatch) => {\n    dispatch(loadOmnibusLoading())\n    setTimeout(async ()=>{\n      let result = await service.get(\"/omnibus/\");\n      // await console.log(\"ver respuesta del get result\", result);\n      if (!result.error) {\n        await dispatch(loadOmnibus(result));\n        Toast.fire({\n          icon: \"success\",\n          title: \"Los Omnbius se han cargado con exito.\",\n        });\n      } else {\n        let msg = \"Hubo un error al cargar los Omnibus.\";\n        ShowSawl(result.status, msg);\n      }\n    },5000)\n  },[dispatch]);\n};\n\nconst postOmnibus = (value) => {\n  return async (dispatch) => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/omnibus/\", value);\n    if (!result.error) {\n      await dispatch(createOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se adiciono Satisfactoriamente\",\n      });\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \" Not Signed in successfully\",\n      });\n    }\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/`, data);\n    if (!result.error) {\n      await dispatch(updateOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se  edito correctamente\",\n      });\n    }\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst tallerOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/taller/`, data);\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha pasado al taller\",\n      });\n    }\n    await console.log(\"ver el resutl del put taller\", result);\n  };\n};\n\nconst disponibleOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/disponible/`, data);\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Omnibus ya se encuentra disponible\",\n      });\n    }\n    await console.log(\"ver el resutl del put disponible\", result);\n  };\n};\n\nconst delOmnibus = (data) => {\n  console.log(\"ver data del\", data);\n  return async (dispatch) => {\n    let result = await service.del(`/omnibus/${data.pk}/`);\n    if (!result.error) {\n      await dispatch(deleteOmnibus(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha eliminado con exito\",\n      });\n    }\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default {\n  getOmnibus,\n  tallerOmnibus,\n  delOmnibus,\n  disponibleOmnibus,\n  postOmnibus,\n  putOmnibus,\n  delOmnibus,\n};\n"]},"metadata":{},"sourceType":"module"}