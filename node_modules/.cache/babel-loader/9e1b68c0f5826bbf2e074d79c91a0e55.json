{"ast":null,"code":"import { ISAUTENTICATE, ISAUTENTICATEError } from \"../types/index\";\nconst initialstate = {\n  payload: \"\",\n  islogin: false,\n  error: false,\n  status: \"\",\n  statusText: \"\",\n  smsError: {\n    sms: \"Usuario y/o Contraseña Incorrectos\"\n  }\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ISAUTENTICATE:\n      {\n        return { ...state,\n          payload: action.payload,\n          islogin: true\n        };\n      }\n\n    case ISAUTENTICATEError:\n      {\n        return { ...state,\n          error: action.payload.error,\n          status: action.payload.status,\n          statusText: action.payload.statusText\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/reducers/userReducers.js"],"names":["ISAUTENTICATE","ISAUTENTICATEError","initialstate","payload","islogin","error","status","statusText","smsError","sms","state","action","type"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,gBAAlD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,UAAU,EAAE,EALO;AAMnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE;AADG;AANS,CAArB;AAWA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGU,KADE;AAELP,UAAAA,OAAO,EAAEQ,MAAM,CAACR,OAFX;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKH,kBAAL;AAAyB;AACvB,eAAO,EACL,GAAGS,KADE;AAELL,UAAAA,KAAK,EAAEM,MAAM,CAACR,OAAP,CAAeE,KAFjB;AAGLC,UAAAA,MAAM,EAAEK,MAAM,CAACR,OAAP,CAAeG,MAHlB;AAILC,UAAAA,UAAU,EAAEI,MAAM,CAACR,OAAP,CAAeI;AAJtB,SAAP;AAMD;;AAED;AACE,aAAOG,KAAP;AAlBJ;AAoBD,CArBD","sourcesContent":["import { ISAUTENTICATE, ISAUTENTICATEError } from \"../types/index\";\n\nconst initialstate = {\n  payload: \"\",\n  islogin: false,\n  error: false,\n  status: \"\",\n  statusText: \"\",\n  smsError: {\n    sms: \"Usuario y/o Contraseña Incorrectos\",\n  },\n};\n\nexport default (state = initialstate, action) => {\n  switch (action.type) {\n    case ISAUTENTICATE: {\n      return {\n        ...state,\n        payload: action.payload,\n        islogin: true,\n      };\n    }\n    case ISAUTENTICATEError: {\n      return {\n        ...state,\n        error: action.payload.error,\n        status: action.payload.status,\n        statusText: action.payload.statusText,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}