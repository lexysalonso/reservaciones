{"ast":null,"code":"//import storage from \"../helper/storage\";\nimport axios from \"axios\"; //import { types, ShowMessages } from \"../helper/changenotifier\";\n\n/*import { showMessage, typesMessage } from \"../helper/notifier\";*/\n\nconst methos = {\n  GET: \"GET\",\n  POST: \"POST\",\n  PUT: \"PUT\",\n  DEL: \"DELETE\"\n};\n\nconst post = async (endpoint, body) => {\n  return resutlAsync(methos.POST, endpoint, body);\n};\n\nconst put = async (endpoint, body) => {\n  return resutlAsync(methos.PUT, endpoint, body);\n};\n\nconst get = async endpoint => {\n  return resutlAsync(methos.GET, endpoint);\n};\n\nconst del = async endpoint => {\n  return resutlAsync(methos.DEL, endpoint);\n};\n\nconst resutlAsync = async (method, endpoint, body) => {\n  const requestOptions = {\n    mode: \"cors\",\n    method: method,\n    headers: header(),\n    data: body ? JSON.stringify(body) : false\n  };\n  if (!requestOptions.data) delete requestOptions.data;\n\n  try {\n    let result = await axios(requestOptions.method === \"DELETE\" || requestOptions.method === \"PUT\" ? endpoint : process.env.REACT_APP_BACKEND + endpoint, requestOptions);\n\n    if (requestOptions.method === \"DELETE\") {\n      hanletErrorSuccess(result);\n      return result;\n    } else {\n      let data = await result.data;\n      await console.log(\"ver la data del post\", data);\n      await console.log(\"ver el result del post\", result);\n      hanletErrorSuccess(result);\n      return data;\n    }\n  } catch (err) {\n    hanletErrorSuccess(err.response);\n  }\n};\n\nconst header = () => {\n  let token;\n  let data = storage.load(storage.keys.auth);\n\n  if (data && data) {\n    token = data;\n  }\n\n  let header = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n\n  if (token) {\n    Object.assign(header, {\n      Authorization: \"Bearer \" + token\n    });\n  }\n\n  console.log(\"ver headrs\", header);\n  return header;\n};\n\nconst hanletErrorSuccess = value => {\n  let status = value.status;\n  let estado = true;\n\n  switch (status) {\n    case 404:\n      {\n        ShowMessages(types.ERROR, \"Elemento no encontrado\", estado);\n        break;\n      }\n\n    case 502:\n      {\n        ShowMessages(types.ERROR, \"Error interno en el servidor\", estado);\n        break;\n      }\n\n    case 201:\n      {\n        ShowMessages(types.SUCCESS, value.data.message, estado);\n        break;\n      }\n\n    case 200:\n      {\n        ShowMessages(types.SUCCESS, value.data.length > 1 ? \"Los choferes se han listados con éxito\" : \"El chofer se ha editado con éxito\", estado);\n        break;\n      }\n\n    case 204:\n      {\n        ShowMessages(types.SUCCESS, \"El chofer se ha eliminado con exito\", estado);\n        break;\n      }\n\n    default:\n      if (!value.data) {\n        console.log(\"ver value\", value);\n        ShowMessages(types.ERROR, value.statusText, estado);\n      } else {\n        console.log(\"ver value\", value);\n        ShowMessages(types.ERROR, value.data.ci ? value.data.ci[0] : value.data.detail, estado);\n      }\n\n  }\n};\n\nconst handleResponse = response => {\n  if (!response.ok) {\n    throw console.log(new Error(\"Ocurrio un error en el servidor\"));\n  } else {\n    return response.json().then(data => {\n      console.log(\"ver json response\", data);\n      return data;\n    });\n  }\n};\n\nexport default {\n  post,\n  put,\n  get,\n  del\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/helpers/sevicesViejo.js"],"names":["axios","methos","GET","POST","PUT","DEL","post","endpoint","body","resutlAsync","put","get","del","method","requestOptions","mode","headers","header","data","JSON","stringify","result","process","env","REACT_APP_BACKEND","hanletErrorSuccess","console","log","err","response","token","storage","load","keys","auth","Accept","Object","assign","Authorization","value","status","estado","ShowMessages","types","ERROR","SUCCESS","message","length","statusText","ci","detail","handleResponse","ok","Error","json","then"],"mappings":"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","sourcesContent":["//import storage from \"../helper/storage\";\nimport axios from \"axios\";\n//import { types, ShowMessages } from \"../helper/changenotifier\";\n\n/*import { showMessage, typesMessage } from \"../helper/notifier\";*/\nconst methos = {\n  GET: \"GET\",\n  POST: \"POST\",\n  PUT: \"PUT\",\n  DEL: \"DELETE\",\n};\n\nconst post = async (endpoint, body) => {\n  return resutlAsync(methos.POST, endpoint, body);\n};\n\nconst put = async (endpoint, body) => {\n  return resutlAsync(methos.PUT, endpoint, body);\n};\n\nconst get = async (endpoint) => {\n  return resutlAsync(methos.GET, endpoint);\n};\n\nconst del = async (endpoint) => {\n  return resutlAsync(methos.DEL, endpoint);\n};\nconst resutlAsync = async (method, endpoint, body) => {\n  const requestOptions = {\n    mode: \"cors\",\n    method: method,\n    headers: header(),\n    data: body ? JSON.stringify(body) : false,\n  };\n\n  if (!requestOptions.data) delete requestOptions.data;\n\n  try {\n    let result = await axios(\n      requestOptions.method === \"DELETE\" || requestOptions.method === \"PUT\"\n        ? endpoint\n        : process.env.REACT_APP_BACKEND + endpoint,\n      requestOptions\n    );\n    if (requestOptions.method === \"DELETE\") {\n      hanletErrorSuccess(result);\n      return result;\n    } else {\n      let data = await result.data;\n      await console.log(\"ver la data del post\", data);\n      await console.log(\"ver el result del post\", result);\n      hanletErrorSuccess(result);\n      return data;\n    }\n  } catch (err) {\n    hanletErrorSuccess(err.response);\n  }\n};\n\nconst header = () => {\n  let token;\n  let data = storage.load(storage.keys.auth);\n  if (data && data) {\n    token = data;\n  }\n  let header = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  };\n  if (token) {\n    Object.assign(header, { Authorization: \"Bearer \" + token });\n  }\n  console.log(\"ver headrs\", header);\n  return header;\n};\n\nconst hanletErrorSuccess = (value) => {\n  let status = value.status;\n  let estado = true;\n  switch (status) {\n    case 404: {\n      ShowMessages(types.ERROR, \"Elemento no encontrado\", estado);\n      break;\n    }\n    case 502: {\n      ShowMessages(types.ERROR, \"Error interno en el servidor\", estado);\n      break;\n    }\n    case 201: {\n      ShowMessages(types.SUCCESS, value.data.message, estado);\n      break;\n    }\n    case 200: {\n      ShowMessages(\n        types.SUCCESS,\n        value.data.length > 1\n          ? \"Los choferes se han listados con éxito\"\n          : \"El chofer se ha editado con éxito\",\n        estado\n      );\n      break;\n    }\n    case 204: {\n      ShowMessages(\n        types.SUCCESS,\n        \"El chofer se ha eliminado con exito\",\n        estado\n      );\n      break;\n    }\n    default:\n      if (!value.data) {\n        console.log(\"ver value\", value);\n        ShowMessages(types.ERROR, value.statusText, estado);\n      } else {\n        console.log(\"ver value\", value);\n        ShowMessages(\n          types.ERROR,\n          value.data.ci ? value.data.ci[0] : value.data.detail,\n          estado\n        );\n      }\n  }\n};\n\nconst handleResponse = (response) => {\n  if (!response.ok) {\n    throw console.log(new Error(\"Ocurrio un error en el servidor\"));\n  } else {\n    return response.json().then((data) => {\n      console.log(\"ver json response\", data);\n      return data;\n    });\n  }\n};\n\nexport default { post, put, get, del };\n"]},"metadata":{},"sourceType":"module"}