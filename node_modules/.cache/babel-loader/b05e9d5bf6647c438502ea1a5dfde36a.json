{"ast":null,"code":"var _jsxFileName = \"/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/context/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport services from \"components/Login/services\";\nimport storage from 'helpers/storage';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(() => storage.load(storage.Keys.auth) ? jwt_decode(storage.load(storage.Keys.auth)) : null);\n  const [refresh_token, setRefreshToken] = useState(storage.load(storage.Keys.refresh));\n  const dispatch = useDispatch();\n\n  const loginUser = data => {\n    dispatch(services.loginAuth(data));\n  };\n\n  const logoutUser = data => {\n    dispatch(services.lo(data));\n  };\n\n  const data = {\n    loginUser,\n    setAccessToken,\n    setUser,\n    user\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"QAHm+mqtNuHfY6D2sPqwVJQojYs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AuthProvider;\nexport { AuthProvider };\nexport default UserContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/context/UserContext.js"],"names":["useState","createContext","useDispatch","services","storage","jwt_decode","UserContext","AuthProvider","children","user","setUser","load","Keys","auth","refresh_token","setRefreshToken","refresh","dispatch","loginUser","data","loginAuth","logoutUser","lo","setAccessToken"],"mappings":";;;AAAA,SAAQA,QAAR,EAAiBC,aAAjB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAQC,OAAR,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAwB,YAAxB;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;;AAEA,MAAMM,YAAY,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,MAC/BI,OAAO,CAACO,IAAR,CAAaP,OAAO,CAACQ,IAAR,CAAaC,IAA1B,IACIR,UAAU,CAACD,OAAO,CAACO,IAAR,CAAaP,OAAO,CAACQ,IAAR,CAAaC,IAA1B,CAAD,CADd,GAEI,IAH0B,CAAhC;AAMA,QAAM,CAACC,aAAD,EAAgBC,eAAhB,IAAmCf,QAAQ,CAC/CI,OAAO,CAACO,IAAR,CAAaP,OAAO,CAACQ,IAAR,CAAaI,OAA1B,CAD+C,CAAjD;AAGA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,SAAS,GAAIC,IAAD,IAAU;AAC1BF,IAAAA,QAAQ,CAACd,QAAQ,CAACiB,SAAT,CAAmBD,IAAnB,CAAD,CAAR;AACD,GAFD;;AAIA,QAAME,UAAU,GAAIF,IAAD,IAAU;AAC3BF,IAAAA,QAAQ,CAACd,QAAQ,CAACmB,EAAT,CAAYH,IAAZ,CAAD,CAAR;AACD,GAFD;;AAID,QAAMA,IAAI,GAAG;AACXD,IAAAA,SADW;AAEXK,IAAAA,cAFW;AAGXb,IAAAA,OAHW;AAIXD,IAAAA;AAJW,GAAb;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,IAA7B;AAAA,cAAoCX;AAApC;AAAA;AAAA;AAAA;AAAA,UADJ;AAIC,CA9BD;;GAAMD,Y;UAUYL,W;;;KAVZK,Y;AA+BL,SAAQA,YAAR;AACA,eAAeD,WAAf","sourcesContent":["import {useState,createContext} from \"react\"\nimport { useDispatch } from 'react-redux';\nimport services from \"components/Login/services\";\nimport  storage  from 'helpers/storage';\nimport jwt_decode  from 'jwt-decode';\n\nconst UserContext = createContext();\n\nconst AuthProvider = ({children})=>{\n const [user, setUser] = useState(() =>\n   storage.load(storage.Keys.auth)\n     ? jwt_decode(storage.load(storage.Keys.auth))\n     : null\n );\n\n const [refresh_token, setRefreshToken] = useState(\n   storage.load(storage.Keys.refresh)\n );\n const dispatch = useDispatch()\n\n const loginUser = (data) => {\n   dispatch(services.loginAuth(data));\n };\n\n const logoutUser = (data) => {\n   dispatch(services.lo(data));\n };\n \nconst data = {\n  loginUser,\n  setAccessToken,\n  setUser,\n  user\n};\nreturn (\n    <UserContext.Provider value={data}>{children}</UserContext.Provider>\n)\n\n};\n export {AuthProvider}\n export default UserContext;"]},"metadata":{},"sourceType":"module"}