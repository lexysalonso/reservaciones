{"ast":null,"code":"var _jsxFileName = \"/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/context/OmnibusContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport service from \"../modules/Omnibus/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OmnibusContext = /*#__PURE__*/createContext();\n\nconst OmnibusProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dataToEdit, setdataToEdit] = useState(null);\n  const [datadel, setdataToDel] = useState(null);\n  const [isOpen, setModalShow, setModalClose] = useModal(false);\n  const [isOpenDel, setDataToDelShow, setDataToDelClose] = useModal(false);\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    omnibus\n  } = state.omnibus;\n  useEffect(() => {\n    dispatch(service.getOmnibus());\n  }, []);\n\n  const create = data => {\n    dispatch(service.postOmnibus(data));\n  };\n\n  const update = () => {\n    dispatch(service.putOmnibus(data));\n  };\n\n  const deleteOmnibus = () => {\n    dispatch(service.delOmnibus(data));\n  };\n\n  const data = {\n    omnibus,\n    dataToEdit,\n    setdataToEdit,\n    datadel,\n    setdataToDel,\n    isOpen,\n    setModalShow,\n    setModalClose,\n    isOpenDel,\n    setDataToDelShow,\n    create,\n    update,\n    deleteOmnibus\n  };\n  return /*#__PURE__*/_jsxDEV(OmnibusContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OmnibusProvider, \"pKQ60MTDSCxMDTiEiUp6Smk8lus=\", true, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = OmnibusProvider;\nexport { OmnibusProvider };\nexport default OmnibusContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"OmnibusProvider\");","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/context/OmnibusContext.js"],"names":["createContext","useEffect","useSelector","useDispatch","service","OmnibusContext","OmnibusProvider","children","dataToEdit","setdataToEdit","useState","datadel","setdataToDel","isOpen","setModalShow","setModalClose","useModal","isOpenDel","setDataToDelShow","setDataToDelClose","state","dispatch","omnibus","getOmnibus","create","data","postOmnibus","update","putOmnibus","deleteOmnibus","delOmnibus"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AAEA,MAAMC,cAAc,gBAAGL,aAAa,EAApC;;AAEA,MAAMM,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BF,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACG,MAAD,EAASC,YAAT,EAAuBC,aAAvB,IAAwCC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACC,SAAD,EAAYC,gBAAZ,EAA8BC,iBAA9B,IAAmDH,QAAQ,CAAC,KAAD,CAAjE;AACA,QAAMI,KAAK,GAAGlB,WAAW,CAAEkB,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAM;AAAEmB,IAAAA;AAAF,MAAcF,KAAK,CAACE,OAA1B;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACjB,OAAO,CAACmB,UAAR,EAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,MAAM,GAAIC,IAAD,IAAU;AACvBJ,IAAAA,QAAQ,CAACjB,OAAO,CAACsB,WAAR,CAAoBD,IAApB,CAAD,CAAR;AACD,GAFD;;AAGA,QAAME,MAAM,GAAG,MAAM;AACnBN,IAAAA,QAAQ,CAACjB,OAAO,CAACwB,UAAR,CAAmBH,IAAnB,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAG,MAAM;AAC1BR,IAAAA,QAAQ,CAACjB,OAAO,CAAC0B,UAAR,CAAmBL,IAAnB,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMA,IAAI,GAAG;AACXH,IAAAA,OADW;AAEXd,IAAAA,UAFW;AAGXC,IAAAA,aAHW;AAIXE,IAAAA,OAJW;AAKXC,IAAAA,YALW;AAMXC,IAAAA,MANW;AAOXC,IAAAA,YAPW;AAQXC,IAAAA,aARW;AASXE,IAAAA,SATW;AAUXC,IAAAA,gBAVW;AAYXM,IAAAA,MAZW;AAaXG,IAAAA,MAbW;AAcXE,IAAAA;AAdW,GAAb;AAiBA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEJ,IAAhC;AAAA,cAAuClB;AAAvC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA5CD;;GAAMD,e;UAKUJ,W,EACGC,W;;;KANbG,e;AA8CN,SAASA,eAAT;AACA,eAAeD,cAAf","sourcesContent":["import { createContext, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport service from \"../modules/Omnibus/services\";\n\nconst OmnibusContext = createContext();\n\nconst OmnibusProvider = ({ children }) => {\n  const [dataToEdit, setdataToEdit] = useState(null);\n  const [datadel, setdataToDel] = useState(null);\n  const [isOpen, setModalShow, setModalClose] = useModal(false);\n  const [isOpenDel, setDataToDelShow, setDataToDelClose] = useModal(false);\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { omnibus } = state.omnibus;\n\n  useEffect(() => {\n    dispatch(service.getOmnibus());\n  }, []);\n\n  const create = (data) => {\n    dispatch(service.postOmnibus(data));\n  };\n  const update = () => {\n    dispatch(service.putOmnibus(data));\n  };\n  const deleteOmnibus = () => {\n    dispatch(service.delOmnibus(data));\n  };\n\n  const data = {\n    omnibus,\n    dataToEdit,\n    setdataToEdit,\n    datadel,\n    setdataToDel,\n    isOpen,\n    setModalShow,\n    setModalClose,\n    isOpenDel,\n    setDataToDelShow,\n    \n    create,\n    update,\n    deleteOmnibus,\n  };\n\n  return (\n    <OmnibusContext.Provider value={data}>{children}</OmnibusContext.Provider>\n  );\n};\n\nexport { OmnibusProvider };\nexport default OmnibusContext;\n"]},"metadata":{},"sourceType":"module"}