{"ast":null,"code":"import { loadOmnibus, createOmnibus, updateOmnibus, deleteOmnibus, clearOmnibus } from \"../../actions/omnibusActions\";\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from '../../utilitis/Swal';\n\nconst getOmnibus = () => {\n  return async dispatch => {\n    let result = await service.get(\"/omnibus/\"); // await console.log(\"ver respuesta del get result\", result);\n\n    await dispatch(loadOmnibus(result));\n  };\n};\n\nconst postOmnibus = value => {\n  return async dispatch => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/omnibus/\", value);\n\n    if (!result.error) {\n      await dispatch(createOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se adiciono Satisfactoriamente\"\n      });\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \" Not Signed in successfully\"\n      });\n    }\n\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se  edito correctamente\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst tallerOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/taller/`, data);\n\n    if (!result.error) {\n      await dispatch(updateOmnibus(result[0]));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se ha pasado al taller\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put taller\", result);\n  };\n};\n\nconst disponibleOmnibus = data => {\n  return async dispatch => {\n    let result = await service.put(`/omnibus/${data.pk}/disponible/`, data);\n\n    if (!result.error) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Omnibus ya \"\n      });\n    }\n\n    await console.log(\"ver el resutl del put disponible\", result);\n    await dispatch(updateOmnibus(result[0]));\n  };\n};\n\nconst delOmnibus = data => {\n  console.log(\"ver data del\", data);\n  return async dispatch => {\n    let result = await service.del(`/omnibus/${data.pk}/`);\n    await console.log(\"ver el delete\", result);\n    await dispatch(deleteOmnibus(data));\n  };\n};\n\nexport default {\n  getOmnibus,\n  tallerOmnibus,\n  delOmnibus,\n  disponibleOmnibus,\n  postOmnibus,\n  putOmnibus,\n  delOmnibus\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Omnibus/services.js"],"names":["loadOmnibus","createOmnibus","updateOmnibus","deleteOmnibus","clearOmnibus","service","Toast","getOmnibus","dispatch","result","get","postOmnibus","value","console","log","post","error","fire","icon","title","putOmnibus","data","put","pk","tallerOmnibus","disponibleOmnibus","delOmnibus","del"],"mappings":"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","sourcesContent":["import {\n  loadOmnibus,\n  createOmnibus,\n  updateOmnibus,\n  deleteOmnibus,\n  clearOmnibus,\n} from \"../../actions/omnibusActions\";\n\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from '../../utilitis/Swal';\n\n\n\nconst getOmnibus = () => {\n  return async (dispatch) => {\n    let result = await service.get(\"/omnibus/\");\n   // await console.log(\"ver respuesta del get result\", result);\n    await dispatch(loadOmnibus(result));\n  };\n};\n\nconst postOmnibus = (value) => {\n  return async (dispatch) => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/omnibus/\", value);\n    if(!result.error){\n      await dispatch(createOmnibus(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El omnibus se adiciono Satisfactoriamente\",\n        \n      });\n    }else{\n      Toast.fire({\n        icon: \"error\",\n        title: \" Not Signed in successfully\",\n      });\n    }\n    await console.log(\"ver respuesta del post result\", result);\n    \n  };\n};\n\nconst putOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/`, data);\n    if(!result.error){\n      await dispatch(updateOmnibus(result));\n       Toast.fire({\n         icon: \"success\",\n         title:\"El omnibus se  edito correctamente\"\n       })\n       \n    }\n    await console.log(\"ver el resutl del put\", result);\n    \n  };\n};\n\nconst tallerOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/taller/`, data);\n    if(!result.error){\n       await dispatch(updateOmnibus(result[0]));\n        Toast.fire({\n          icon: \"success\",\n          title:\"El omnibus se ha pasado al taller\"\n        })\n    }\n    await console.log(\"ver el resutl del put taller\", result);\n    \n  };\n};\n\nconst disponibleOmnibus = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/omnibus/${data.pk}/disponible/`, data);\n    if(!result.error){\n      Toast.fire({\n        icon: \"success\",\n        title:\"El Omnibus ya \"\n      })\n    }\n    await console.log(\"ver el resutl del put disponible\", result);\n    await dispatch(updateOmnibus(result[0]));\n  };\n};\n\nconst delOmnibus = (data) => {\n  console.log(\"ver data del\", data);\n  return async (dispatch) => {\n    let result = await service.del(`/omnibus/${data.pk}/`);\n    await console.log(\"ver el delete\", result);\n    await dispatch(deleteOmnibus(data));\n  };\n};\n\n\n\nexport default { getOmnibus,tallerOmnibus,delOmnibus,disponibleOmnibus, postOmnibus, putOmnibus, delOmnibus };\n"]},"metadata":{},"sourceType":"module"}