{"ast":null,"code":"import { loadChofers, createChofers, updateChoferes, deleteChoferes, clearchoferes } from \"../../actions/choferesActions\";\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"utilitis/Swal\";\nimport { ShowSawl } from \"utilitis/Swal\";\n\nconst getChoferes = () => {\n  return async dispatch => {\n    let result = await service.get(\"/choferess/\");\n\n    if (!result.error) {\n      await dispatch(loadChofers(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Chofer se han cargado con exito.\"\n      });\n    } else {\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Chofer se ha adicionado con exito\"\n      });\n    }\n\n    await console.log(\"ver respuesta del get result\", result);\n  };\n};\n\nconst postChoferes = value => {\n  return async dispatch => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/choferes/\", value);\n\n    if (!result.error) {\n      await dispatch(createChofers(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Chofer se ha adicionado con exito\"\n      });\n    }\n\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putChoferes = data => {\n  return async dispatch => {\n    let result = await service.put(`/choferes/${data.pk}/`, data);\n\n    if (!result.error) {\n      await dispatch(updateChoferes(result));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El chofer se ha editado con exito\"\n      });\n    }\n\n    await console.log(\"ver el resutl del put\", result);\n  };\n};\n\nconst delChoferes = data => {\n  console.log(\"ver data del\", data);\n  return async dispatch => {\n    let result = await service.del(`/choferes/${data.pk}/`);\n\n    if (!result.error) {\n      await dispatch(deleteChoferes(data));\n      Toast.fire({\n        icon: \"success\",\n        title: \"El chofer se ha eliminado con exito\"\n      });\n    }\n\n    await console.log(\"ver el delete\", result);\n  };\n};\n\nexport default {\n  getChoferes,\n  postChoferes,\n  putChoferes,\n  delChoferes\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Choferes/services.js"],"names":["loadChofers","createChofers","updateChoferes","deleteChoferes","clearchoferes","service","Toast","ShowSawl","getChoferes","dispatch","result","get","error","fire","icon","title","console","log","postChoferes","value","post","putChoferes","data","put","pk","delChoferes","del"],"mappings":"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","sourcesContent":["import {\n  loadChofers,\n  createChofers,\n  updateChoferes,\n  deleteChoferes,\n  clearchoferes,\n} from \"../../actions/choferesActions\";\n\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"utilitis/Swal\";\nimport { ShowSawl } from \"utilitis/Swal\";\n\nconst getChoferes = () => {\n  return async (dispatch) => {\n    let result = await service.get(\"/choferess/\");\n    if(!result.error){\n        await dispatch(loadChofers(result));\n         Toast.fire({\n           icon: \"success\",\n           title: \"El Chofer se han cargado con exito.\",\n         });\n    }else{\n       Toast.fire({\n         icon: \"success\",\n         title: \"El Chofer se ha adicionado con exito\",\n       });\n    }\n    await console.log(\"ver respuesta del get result\", result);\n    \n  };\n};\n\nconst postChoferes = (value) => {\n  return async (dispatch) => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/choferes/\", value);\n    if(!result.error){\n      await dispatch(createChofers(result));\n      Toast.fire({\n        icon:\"success\",\n        title:\"El Chofer se ha adicionado con exito\"\n      })\n    }\n    await console.log(\"ver respuesta del post result\", result);\n    \n  };\n};\n\nconst putChoferes = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/choferes/${data.pk}/`, data);\n    if(!result.error){\n        await dispatch(updateChoferes(result));\n        Toast.fire({\n          icon:\"success\",\n          title:\"El chofer se ha editado con exito\"\n        })\n    }\n    await console.log(\"ver el resutl del put\", result)\n    \n  };\n};\n\nconst delChoferes = (data) => {\n  console.log(\"ver data del\", data);\n  return async (dispatch) => {\n    let result = await service.del(`/choferes/${data.pk}/`);\n    if(!result.error){\n       await dispatch(deleteChoferes(data));\n       Toast.fire({\n         icon: \"success\",\n         title:\"El chofer se ha eliminado con exito\"\n       })\n    }\n     await console.log(\"ver el delete\", result);\n   \n  };\n};\n\nexport default { getChoferes, postChoferes, putChoferes, delChoferes };\n"]},"metadata":{},"sourceType":"module"}