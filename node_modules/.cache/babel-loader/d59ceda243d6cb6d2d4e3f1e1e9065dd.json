{"ast":null,"code":"import { loadChofers, createChofers, updateChoferes, deleteChoferes, clearchoferes } from \"../../actions/choferesActions\";\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"utilitis/Swal\";\n\nconst getChoferes = () => {\n  return async dispatch => {\n    let result = await service.get(\"/choferes/\");\n\n    if (!result.error) {\n      await dispatch(loadChofers(result));\n    }\n\n    await console.log(\"ver respuesta del get result\", result);\n  };\n};\n\nconst postChoferes = value => {\n  return async dispatch => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/choferes/\", value);\n\n    if (!result.error) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"El Chofer se ha adicionado con exito\"\n      });\n    }\n\n    await console.log(\"ver respuesta del post result\", result);\n  };\n};\n\nconst putChoferes = data => {\n  return async dispatch => {\n    let result = await service.put(`/choferes/${data.pk}/`, data);\n    await console.log(\"ver el resutl del put\", result);\n    await dispatch(updateChoferes(result));\n  };\n};\n\nconst delChoferes = data => {\n  console.log(\"ver data del\", data);\n  return async dispatch => {\n    let result = await service.del(`/choferes/${data.pk}/`);\n    await console.log(\"ver el delete\", result);\n    await dispatch(deleteChoferes(data));\n  };\n};\n\nexport default {\n  getChoferes,\n  postChoferes,\n  putChoferes,\n  delChoferes\n};","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Choferes/services.js"],"names":["loadChofers","createChofers","updateChoferes","deleteChoferes","clearchoferes","service","Toast","getChoferes","dispatch","result","get","error","console","log","postChoferes","value","post","fire","icon","title","putChoferes","data","put","pk","delChoferes","del"],"mappings":"AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,QAMO,+BANP;AAQA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAIC,MAAM,GAAG,MAAMJ,OAAO,CAACK,GAAR,CAAY,YAAZ,CAAnB;;AACA,QAAG,CAACD,MAAM,CAACE,KAAX,EAAiB;AACb,YAAMH,QAAQ,CAACR,WAAW,CAACS,MAAD,CAAZ,CAAd;AACH;;AACD,UAAMG,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CJ,MAA5C,CAAN;AAED,GAPD;AAQD,CATD;;AAWA,MAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAO,MAAOP,QAAP,IAAoB;AACzBI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,KAAjC;AACA,UAAMN,MAAM,GAAG,MAAMJ,OAAO,CAACW,IAAR,CAAa,YAAb,EAA2BD,KAA3B,CAArB;;AACA,QAAG,CAACN,MAAM,CAACE,KAAX,EAAiB;AACfL,MAAAA,KAAK,CAACW,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAC,SADI;AAETC,QAAAA,KAAK,EAAC;AAFG,OAAX;AAID;;AACD,UAAMP,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CJ,MAA7C,CAAN;AAED,GAXD;AAYD,CAbD;;AAeA,MAAMW,WAAW,GAAIC,IAAD,IAAU;AAC5B,SAAO,MAAOb,QAAP,IAAoB;AACzB,QAAIC,MAAM,GAAG,MAAMJ,OAAO,CAACiB,GAAR,CAAa,aAAYD,IAAI,CAACE,EAAG,GAAjC,EAAqCF,IAArC,CAAnB;AACA,UAAMT,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,MAArC,CAAN;AACA,UAAMD,QAAQ,CAACN,cAAc,CAACO,MAAD,CAAf,CAAd;AACD,GAJD;AAKD,CAND;;AAQA,MAAMe,WAAW,GAAIH,IAAD,IAAU;AAC5BT,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B;AACA,SAAO,MAAOb,QAAP,IAAoB;AACzB,QAAIC,MAAM,GAAG,MAAMJ,OAAO,CAACoB,GAAR,CAAa,aAAYJ,IAAI,CAACE,EAAG,GAAjC,CAAnB;AACC,UAAMX,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,MAA7B,CAAN;AACD,UAAMD,QAAQ,CAACL,cAAc,CAACkB,IAAD,CAAf,CAAd;AACD,GAJD;AAKD,CAPD;;AASA,eAAe;AAAEd,EAAAA,WAAF;AAAeO,EAAAA,YAAf;AAA6BM,EAAAA,WAA7B;AAA0CI,EAAAA;AAA1C,CAAf","sourcesContent":["import {\n  loadChofers,\n  createChofers,\n  updateChoferes,\n  deleteChoferes,\n  clearchoferes,\n} from \"../../actions/choferesActions\";\n\nimport service from \"../../helpers/servicesAxios\";\nimport Toast from \"utilitis/Swal\";\n\nconst getChoferes = () => {\n  return async (dispatch) => {\n    let result = await service.get(\"/choferes/\");\n    if(!result.error){\n        await dispatch(loadChofers(result));\n    }\n    await console.log(\"ver respuesta del get result\", result);\n    \n  };\n};\n\nconst postChoferes = (value) => {\n  return async (dispatch) => {\n    console.log(\"ver data services\", value);\n    const result = await service.post(\"/choferes/\", value);\n    if(!result.error){\n      Toast.fire({\n        icon:\"success\",\n        title:\"El Chofer se ha adicionado con exito\"\n      })\n    }\n    await console.log(\"ver respuesta del post result\", result);\n    \n  };\n};\n\nconst putChoferes = (data) => {\n  return async (dispatch) => {\n    let result = await service.put(`/choferes/${data.pk}/`, data);\n    await console.log(\"ver el resutl del put\", result)\n    await dispatch(updateChoferes(result));\n  };\n};\n\nconst delChoferes = (data) => {\n  console.log(\"ver data del\", data);\n  return async (dispatch) => {\n    let result = await service.del(`/choferes/${data.pk}/`);\n     await console.log(\"ver el delete\", result);\n    await dispatch(deleteChoferes(data));\n  };\n};\n\nexport default { getChoferes, postChoferes, putChoferes, delChoferes };\n"]},"metadata":{},"sourceType":"module"}