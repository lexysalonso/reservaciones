{"ast":null,"code":"const d = document;\nexport const Parse = props => {\n  const {\n    viajes,\n    destinos,\n    omnibus,\n    choferes,\n    dataToEdit\n  } = props;\n  const objnew = {\n    pk: null,\n    hora: \"\",\n    omnibus: \"\",\n    chofer1: \"\",\n    chofer2: \"\",\n    origen: \"\",\n    destino: \"\",\n    create_by: Number(1)\n  };\n\n  if (dataToEdit) {\n    let omnibuss = omnibus.filter(om => om.numero === (dataToEdit === null || dataToEdit === void 0 ? void 0 : dataToEdit.omnibus));\n    console.log(\"ver omnibus\", omnibuss[0].pk);\n    objnew.omnibus = omnibuss[0].pk;\n    let chofer1 = choferes.filter(ch => ch.nombre === (dataToEdit === null || dataToEdit === void 0 ? void 0 : dataToEdit.chofer1));\n    objnew.chofer1 = chofer1[0].pk;\n    let chofer2 = choferes.filter(ch => ch.nombre === (dataToEdit === null || dataToEdit === void 0 ? void 0 : dataToEdit.chofer2));\n    objnew.chofer2 = chofer2[0].pk;\n    let origen = destinos.filter(des => des.nombre === (dataToEdit === null || dataToEdit === void 0 ? void 0 : dataToEdit.origen));\n    objnew.origen = origen[0].pk;\n    let destino = destinos.filter(des => des.nombre === (dataToEdit === null || dataToEdit === void 0 ? void 0 : dataToEdit.destino));\n    objnew.destino = destino[0].pk;\n    console.log(\"ver px\", objnew);\n    return objnew;\n  }\n};\n_c = Parse;\nexport default Parse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Parse\");","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Viajes/parsepk.js"],"names":["d","document","Parse","props","viajes","destinos","omnibus","choferes","dataToEdit","objnew","pk","hora","chofer1","chofer2","origen","destino","create_by","Number","omnibuss","filter","om","numero","console","log","ch","nombre","des"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,QAAV;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA;AAAvC,MAAqDL,KAA3D;AACA,QAAMM,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAE,IADS;AAEbC,IAAAA,IAAI,EAAE,EAFO;AAGbL,IAAAA,OAAO,EAAE,EAHI;AAIbM,IAAAA,OAAO,EAAE,EAJI;AAKbC,IAAAA,OAAO,EAAE,EALI;AAMbC,IAAAA,MAAM,EAAE,EANK;AAObC,IAAAA,OAAO,EAAE,EAPI;AAQbC,IAAAA,SAAS,EAAEC,MAAM,CAAC,CAAD;AARJ,GAAf;;AAUA,MAAIT,UAAJ,EAAgB;AACd,QAAIU,QAAQ,GAAGZ,OAAO,CAACa,MAAR,CAAgBC,EAAD,IAAQA,EAAE,CAACC,MAAH,MAAcb,UAAd,aAAcA,UAAd,uBAAcA,UAAU,CAAEF,OAA1B,CAAvB,CAAf;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,QAAQ,CAAC,CAAD,CAAR,CAAYR,EAAvC;AACAD,IAAAA,MAAM,CAACH,OAAP,GAAiBY,QAAQ,CAAC,CAAD,CAAR,CAAYR,EAA7B;AACA,QAAIE,OAAO,GAAGL,QAAQ,CAACY,MAAT,CAAiBK,EAAD,IAAQA,EAAE,CAACC,MAAH,MAAcjB,UAAd,aAAcA,UAAd,uBAAcA,UAAU,CAAEI,OAA1B,CAAxB,CAAd;AACAH,IAAAA,MAAM,CAACG,OAAP,GAAiBA,OAAO,CAAC,CAAD,CAAP,CAAWF,EAA5B;AACA,QAAIG,OAAO,GAAGN,QAAQ,CAACY,MAAT,CAAiBK,EAAD,IAAQA,EAAE,CAACC,MAAH,MAAcjB,UAAd,aAAcA,UAAd,uBAAcA,UAAU,CAAEK,OAA1B,CAAxB,CAAd;AACAJ,IAAAA,MAAM,CAACI,OAAP,GAAiBA,OAAO,CAAC,CAAD,CAAP,CAAWH,EAA5B;AACA,QAAII,MAAM,GAAGT,QAAQ,CAACc,MAAT,CAAiBO,GAAD,IAASA,GAAG,CAACD,MAAJ,MAAejB,UAAf,aAAeA,UAAf,uBAAeA,UAAU,CAAEM,MAA3B,CAAzB,CAAb;AACAL,IAAAA,MAAM,CAACK,MAAP,GAAgBA,MAAM,CAAC,CAAD,CAAN,CAAUJ,EAA1B;AACA,QAAIK,OAAO,GAAGV,QAAQ,CAACc,MAAT,CAAiBO,GAAD,IAASA,GAAG,CAACD,MAAJ,MAAejB,UAAf,aAAeA,UAAf,uBAAeA,UAAU,CAAEO,OAA3B,CAAzB,CAAd;AACAN,IAAAA,MAAM,CAACM,OAAP,GAAiBA,OAAO,CAAC,CAAD,CAAP,CAAWL,EAA5B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,MAAtB;AACA,WAAOA,MAAP;AACD;AACF,CA3BM;KAAMP,K;AA6Bb,eAAeA,KAAf","sourcesContent":["const d = document;\n\nexport const Parse = (props) => {\n  const { viajes, destinos, omnibus, choferes ,dataToEdit} = props;\n  const objnew = {\n    pk: null,\n    hora: \"\",\n    omnibus: \"\",\n    chofer1: \"\",\n    chofer2: \"\",\n    origen: \"\",\n    destino: \"\",\n    create_by: Number(1),\n  };\n  if (dataToEdit) {\n    let omnibuss = omnibus.filter((om) => om.numero === dataToEdit?.omnibus);\n    console.log(\"ver omnibus\", omnibuss[0].pk);\n    objnew.omnibus = omnibuss[0].pk;\n    let chofer1 = choferes.filter((ch) => ch.nombre === dataToEdit?.chofer1);\n    objnew.chofer1 = chofer1[0].pk;\n    let chofer2 = choferes.filter((ch) => ch.nombre === dataToEdit?.chofer2);\n    objnew.chofer2 = chofer2[0].pk;\n    let origen = destinos.filter((des) => des.nombre === dataToEdit?.origen);\n    objnew.origen = origen[0].pk;\n    let destino = destinos.filter((des) => des.nombre === dataToEdit?.destino);\n    objnew.destino = destino[0].pk;\n    console.log(\"ver px\", objnew);\n    return objnew;\n  }\n};\n\nexport default Parse;\n"]},"metadata":{},"sourceType":"module"}