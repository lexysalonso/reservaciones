{"ast":null,"code":"var _jsxFileName = \"/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/context/OmnibusContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport service from '../modules/Omnibus/services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OmnibusContext = /*#__PURE__*/createContext();\n\nconst OmnibusProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dataToEdit, setdataToEdit] = useState(null);\n  const [datadel, setdataToDel] = useState(null);\n  const [isOpen, setModalShow, setModalClose] = useModal(false);\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    omnibus\n  } = state.omnibus;\n  useEffect(() => {\n    dispatch(service.getOmnibus());\n  }, []);\n\n  const create = data => {\n    dispatch(service.postOmnibus(data));\n  };\n\n  const update = () => {\n    dispatch(service.putOmnibus(data));\n  };\n\n  const deleteOmnibus = () => {\n    dispatch(service.delOmnibus(data));\n  };\n\n  const data = {\n    omnibus,\n    dataToEdit,\n    setdataToEdit,\n    datadel,\n    setdataToDel,\n    create,\n    update,\n    deleteOmnibus\n  };\n  return /*#__PURE__*/_jsxDEV(OmnibusContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n\n_s(OmnibusProvider, \"3BJ83Fgbvf02isNOxA/hSPNrwk8=\", true, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = OmnibusProvider;\nexport { OmnibusProvider };\nexport default OmnibusContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"OmnibusProvider\");","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/context/OmnibusContext.js"],"names":["createContext","useEffect","useSelector","useDispatch","service","OmnibusContext","OmnibusProvider","children","dataToEdit","setdataToEdit","useState","datadel","setdataToDel","isOpen","setModalShow","setModalClose","useModal","state","dispatch","omnibus","getOmnibus","create","data","postOmnibus","update","putOmnibus","deleteOmnibus","delOmnibus"],"mappings":";;;AAAA,SAAQA,aAAR,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AAGA,MAAMC,cAAc,gBAAGL,aAAa,EAApC;;AAEA,MAAMM,eAAe,GAAE,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BF,QAAQ,CAAC,IAAD,CAAxC;AACC,QAAM,CAACG,MAAD,EAASC,YAAT,EAAuBC,aAAvB,IAAwCC,QAAQ,CAAC,KAAD,CAAtD;AACD,QAAMC,KAAK,GAAGf,WAAW,CAAEe,KAAD,IAAUA,KAAX,CAAzB;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAM;AAACgB,IAAAA;AAAD,MAAYF,KAAK,CAACE,OAAxB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACbiB,IAAAA,QAAQ,CAACd,OAAO,CAACgB,UAAR,EAAD,CAAR;AACJ,GAFU,EAER,EAFQ,CAAT;;AAIF,QAAMC,MAAM,GAAIC,IAAD,IAAS;AAClBJ,IAAAA,QAAQ,CAACd,OAAO,CAACmB,WAAR,CAAoBD,IAApB,CAAD,CAAR;AACL,GAFD;;AAGA,QAAME,MAAM,GAAG,MAAK;AAChBN,IAAAA,QAAQ,CAACd,OAAO,CAACqB,UAAR,CAAmBH,IAAnB,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMI,aAAa,GAAG,MAAI;AACtBR,IAAAA,QAAQ,CAACd,OAAO,CAACuB,UAAR,CAAmBL,IAAnB,CAAD,CAAR;AACH,GAFD;;AAKA,QAAMA,IAAI,GAAG;AACXH,IAAAA,OADW;AAEXX,IAAAA,UAFW;AAGXC,IAAAA,aAHW;AAIXE,IAAAA,OAJW;AAKXC,IAAAA,YALW;AAMXS,IAAAA,MANW;AAOXG,IAAAA,MAPW;AAQXE,IAAAA;AARW,GAAb;AAYA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEJ,IAAhC;AAAA,cAAuCf;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArCD;;GAAMD,e;UAIcJ,W,EACGC,W;;;KALjBG,e;AAuCN,SAAQA,eAAR;AACA,eAAeD,cAAf","sourcesContent":["import {createContext , useEffect } from \"react\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport service from '../modules/Omnibus/services'\n\n\nconst OmnibusContext = createContext()\n\nconst OmnibusProvider =({children})=>{\n      const [dataToEdit, setdataToEdit] = useState(null);\n      const [datadel, setdataToDel] = useState(null);\n       const [isOpen, setModalShow, setModalClose] = useModal(false);\n      const state = useSelector((state)=> state)\n      const dispatch = useDispatch()\n\n      const {omnibus} = state.omnibus\n  \n      useEffect(() => {\n         dispatch(service.getOmnibus())   \n    }, [])\n     \n    const create = (data) =>{\n          dispatch(service.postOmnibus(data))\n    } \n    const update = () =>{\n        dispatch(service.putOmnibus(data))\n    }  \n    const deleteOmnibus = ()=>{\n        dispatch(service.delOmnibus(data))\n    } \n    \n        \n    const data = {\n      omnibus,\n      dataToEdit,\n      setdataToEdit,\n      datadel,\n      setdataToDel,\n      create,\n      update,\n      deleteOmnibus,\n\n    };\n     \n    return <OmnibusContext.Provider value={data}>{children}</OmnibusContext.Provider>\n}\n\nexport {OmnibusProvider};\nexport default OmnibusContext;"]},"metadata":{},"sourceType":"module"}