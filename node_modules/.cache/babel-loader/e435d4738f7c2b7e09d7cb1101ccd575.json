{"ast":null,"code":"import { CREATE_OMNIBUS, LOAD_OMNIBUS, UPDATE_OMNIBUS, CLEAR_OMNIBUS, DELETE_OMNIBUS, OMNIBUS_DISPONIBLES, OMNIBUS_TALLER, OMNIBUS_MAS_VIAJES, L } from \"../types/index\";\nexport const initialstate = {\n  loading: false,\n  omnibus: [],\n  omnibustaller: [],\n  omnibusdisponibles: [],\n  omnibusmasviajes: []\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_PENDING_OMNIBUS:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case LOAD_OMNIBUS:\n      {\n        console.log(\"ver payload\", action.payload);\n        return { ...state,\n          omnibus: action.payload.map(omnibus => omnibus),\n          loading: false\n        };\n      }\n\n    case CREATE_OMNIBUS:\n      {\n        return { ...state,\n          omnibus: [...state.omnibus, action.payload]\n        };\n      }\n\n    case UPDATE_OMNIBUS:\n      {\n        let newArray = state.omnibus.map(omnibus => omnibus.pk === action.payload.pk ? action.payload : omnibus);\n        return { ...state,\n          omnibus: newArray\n        };\n      }\n\n    case DELETE_OMNIBUS:\n      {\n        let newData = state.omnibus.filter(omnibus => omnibus.pk !== action.payload.pk);\n        return { ...state,\n          omnibus: newData\n        };\n      }\n\n    case OMNIBUS_DISPONIBLES:\n      {\n        return { ...state,\n          omnibusdisponibles: action.payload.map(el => el)\n        };\n      }\n\n    case OMNIBUS_TALLER:\n      {\n        return { ...state,\n          omnibustaller: action.payload.map(el => el)\n        };\n      }\n\n    case OMNIBUS_MAS_VIAJES:\n      {\n        return { ...state,\n          omnibusmasviajes: action.payload.map(el => el)\n        };\n      }\n\n    case CLEAR_OMNIBUS:\n      {\n        return initialstate;\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/reducers/omnibusReducers.js"],"names":["CREATE_OMNIBUS","LOAD_OMNIBUS","UPDATE_OMNIBUS","CLEAR_OMNIBUS","DELETE_OMNIBUS","OMNIBUS_DISPONIBLES","OMNIBUS_TALLER","OMNIBUS_MAS_VIAJES","L","initialstate","loading","omnibus","omnibustaller","omnibusdisponibles","omnibusmasviajes","state","action","type","LOAD_PENDING_OMNIBUS","console","log","payload","map","newArray","pk","newData","filter","el"],"mappings":"AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,mBANF,EAOEC,cAPF,EAQEC,kBARF,EASEC,CATF,QAUO,gBAVP;AAYA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,OAAO,EAAE,EAFiB;AAG1BC,EAAAA,aAAa,EAAE,EAHW;AAI1BC,EAAAA,kBAAkB,EAAE,EAJM;AAK1BC,EAAAA,gBAAgB,EAAE;AALQ,CAArB;AAQP,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,oBAAL;AAA2B;AACzB,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKT,YAAL;AAAmB;AACjBkB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,MAAM,CAACK,OAAlC;AACA,eAAO,EACL,GAAGN,KADE;AAELJ,UAAAA,OAAO,EAAEK,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoBX,OAAD,IAAaA,OAAhC,CAFJ;AAGLD,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKV,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGe,KADE;AAELJ,UAAAA,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAV,EAAmBK,MAAM,CAACK,OAA1B;AAFJ,SAAP;AAID;;AACD,SAAKnB,cAAL;AAAqB;AACnB,YAAIqB,QAAQ,GAAGR,KAAK,CAACJ,OAAN,CAAcW,GAAd,CAAmBX,OAAD,IAC/BA,OAAO,CAACa,EAAR,KAAeR,MAAM,CAACK,OAAP,CAAeG,EAA9B,GAAmCR,MAAM,CAACK,OAA1C,GAAoDV,OADvC,CAAf;AAIA,eAAO,EACL,GAAGI,KADE;AAELJ,UAAAA,OAAO,EAAEY;AAFJ,SAAP;AAID;;AAED,SAAKnB,cAAL;AAAqB;AACnB,YAAIqB,OAAO,GAAGV,KAAK,CAACJ,OAAN,CAAce,MAAd,CACXf,OAAD,IAAaA,OAAO,CAACa,EAAR,KAAeR,MAAM,CAACK,OAAP,CAAeG,EAD/B,CAAd;AAGA,eAAO,EACL,GAAGT,KADE;AAELJ,UAAAA,OAAO,EAAEc;AAFJ,SAAP;AAID;;AACD,SAAKpB,mBAAL;AAA0B;AACxB,eAAO,EACL,GAAGU,KADE;AAELF,UAAAA,kBAAkB,EAAEG,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoBK,EAAD,IAAQA,EAA3B;AAFf,SAAP;AAID;;AACD,SAAKrB,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGS,KADE;AAELH,UAAAA,aAAa,EAAEI,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoBK,EAAD,IAAQA,EAA3B;AAFV,SAAP;AAID;;AACD,SAAKpB,kBAAL;AAAyB;AACvB,eAAO,EACL,GAAGQ,KADE;AAELD,UAAAA,gBAAgB,EAAEE,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoBK,EAAD,IAAQA,EAA3B;AAFb,SAAP;AAID;;AACD,SAAKxB,aAAL;AAAoB;AAClB,eAAOM,YAAP;AACD;;AAED;AACE,aAAOM,KAAP;AAhEJ;AAkED,CAnED","sourcesContent":["import {\n  CREATE_OMNIBUS,\n  LOAD_OMNIBUS,\n  UPDATE_OMNIBUS,\n  CLEAR_OMNIBUS,\n  DELETE_OMNIBUS,\n  OMNIBUS_DISPONIBLES,\n  OMNIBUS_TALLER,\n  OMNIBUS_MAS_VIAJES,\n  L\n} from \"../types/index\";\n\nexport const initialstate = {\n  loading: false,\n  omnibus: [],\n  omnibustaller: [],\n  omnibusdisponibles: [],\n  omnibusmasviajes: [],\n};\n\nexport default (state = initialstate, action) => {\n  switch (action.type) {\n    case LOAD_PENDING_OMNIBUS: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case LOAD_OMNIBUS: {\n      console.log(\"ver payload\", action.payload);\n      return {\n        ...state,\n        omnibus: action.payload.map((omnibus) => omnibus),\n        loading: false,\n      };\n    }\n    case CREATE_OMNIBUS: {\n      return {\n        ...state,\n        omnibus: [...state.omnibus, action.payload],\n      };\n    }\n    case UPDATE_OMNIBUS: {\n      let newArray = state.omnibus.map((omnibus) =>\n        omnibus.pk === action.payload.pk ? action.payload : omnibus\n      );\n\n      return {\n        ...state,\n        omnibus: newArray,\n      };\n    }\n\n    case DELETE_OMNIBUS: {\n      let newData = state.omnibus.filter(\n        (omnibus) => omnibus.pk !== action.payload.pk\n      );\n      return {\n        ...state,\n        omnibus: newData,\n      };\n    }\n    case OMNIBUS_DISPONIBLES: {\n      return {\n        ...state,\n        omnibusdisponibles: action.payload.map((el) => el),\n      };\n    }\n    case OMNIBUS_TALLER: {\n      return {\n        ...state,\n        omnibustaller: action.payload.map((el) => el),\n      };\n    }\n    case OMNIBUS_MAS_VIAJES: {\n      return {\n        ...state,\n        omnibusmasviajes: action.payload.map((el) => el),\n      };\n    }\n    case CLEAR_OMNIBUS: {\n      return initialstate;\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}