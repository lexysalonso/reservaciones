{"ast":null,"code":"var _jsxFileName = \"/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Choferes/modal.jsx\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalChoferes = _ref => {\n  let {\n    show,\n    children,\n    setModalClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onClick: setModalClose,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Using Grid in Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"show-grid\",\n      children: Ch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: setModalClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n/*function App() {\n  const [modalShow, setModalShow] = useState(false);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Launch modal with grid\n      </Button>\n\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n}*/\n\n\n_c = ModalChoferes;\nexport default ModalChoferes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChoferes\");","map":{"version":3,"sources":["/media/lmdiaz/bd47588f-a8f9-4e55-b2d4-112c4f385fdf/Lexys/Programacion/proyecto/Reservaciones/Reservaciones-bootstrap/src/modules/Choferes/modal.jsx"],"names":["Container","Row","Col","Modal","Button","ModalChoferes","show","children","setModalClose","Ch"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,QAAmD,iBAAnD;;;AAEA,MAAMC,aAAa,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAsC;AAC3D,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,OAAO,EAAEE,aAFX;AAGE,uBAAgB,+BAHlB;AAAA,4BAKE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA,gBACEC;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAED,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApCMH,a;AAsCN,eAAeA,aAAf","sourcesContent":["import { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\n\nconst ModalChoferes = ({ show, children, setModalClose }) => {\n  return (\n    <Modal\n      show={show}\n      onClick={setModalClose}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Using Grid in Modal\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"show-grid\">\n       {Ch}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button type=\"submit\" onClick={setModalClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\n/*function App() {\n  const [modalShow, setModalShow] = useState(false);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Launch modal with grid\n      </Button>\n\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n}*/\n\nexport default ModalChoferes;\n"]},"metadata":{},"sourceType":"module"}